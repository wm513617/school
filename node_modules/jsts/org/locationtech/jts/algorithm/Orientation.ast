{
  "sourceType" : "module",
  "body" : [ {
    "specifiers" : [ {
      "local" : {
        "name" : "IllegalArgumentException",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../java/lang/IllegalArgumentException'",
      "raw" : "'../../../../java/lang/IllegalArgumentException'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'../../../../extend'",
      "raw" : "'../../../../extend'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "specifiers" : [ {
      "local" : {
        "name" : "CGAlgorithmsDD",
        "type" : "Identifier"
      },
      "type" : "ImportDefaultSpecifier"
    } ],
    "source" : {
      "value" : "'./CGAlgorithmsDD'",
      "raw" : "'./CGAlgorithmsDD'",
      "type" : "Literal"
    },
    "type" : "ImportDeclaration"
  }, {
    "declaration" : {
      "id" : {
        "name" : "Orientation",
        "type" : "Identifier"
      },
      "params" : [ ],
      "body" : {
        "body" : [ ],
        "type" : "BlockStatement"
      },
      "generator" : false,
      "type" : "FunctionDeclaration"
    },
    "type" : "ExportDefaultDeclaration"
  }, {
    "expression" : {
      "callee" : {
        "name" : "extend",
        "type" : "Identifier"
      },
      "arguments" : [ {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "prototype",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      }, {
        "properties" : [ {
          "key" : {
            "name" : "interfaces_",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "elements" : [ ],
                  "type" : "ArrayExpression"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        }, {
          "key" : {
            "name" : "getClass",
            "type" : "Identifier"
          },
          "value" : {
            "params" : [ ],
            "body" : {
              "body" : [ {
                "argument" : {
                  "name" : "Orientation",
                  "type" : "Identifier"
                },
                "type" : "ReturnStatement"
              } ],
              "type" : "BlockStatement"
            },
            "generator" : false,
            "type" : "FunctionExpression"
          },
          "kind" : "init",
          "computed" : false,
          "method" : false,
          "shorthand" : false,
          "type" : "Property"
        } ],
        "type" : "ObjectExpression"
      } ],
      "type" : "CallExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "index",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "params" : [ {
          "name" : "p1",
          "type" : "Identifier"
        }, {
          "name" : "p2",
          "type" : "Identifier"
        }, {
          "name" : "q",
          "type" : "Identifier"
        } ],
        "body" : {
          "body" : [ {
            "argument" : {
              "callee" : {
                "object" : {
                  "name" : "CGAlgorithmsDD",
                  "type" : "Identifier"
                },
                "property" : {
                  "name" : "orientationIndex",
                  "type" : "Identifier"
                },
                "computed" : false,
                "type" : "MemberExpression"
              },
              "arguments" : [ {
                "name" : "p1",
                "type" : "Identifier"
              }, {
                "name" : "p2",
                "type" : "Identifier"
              }, {
                "name" : "q",
                "type" : "Identifier"
              } ],
              "type" : "CallExpression"
            },
            "type" : "ReturnStatement"
          } ],
          "type" : "BlockStatement"
        },
        "generator" : false,
        "type" : "FunctionExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "isCCW",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "params" : [ {
          "name" : "ring",
          "type" : "Identifier"
        } ],
        "body" : {
          "body" : [ {
            "declarations" : [ {
              "id" : {
                "name" : "nPts",
                "type" : "Identifier"
              },
              "init" : {
                "operator" : "-",
                "left" : {
                  "object" : {
                    "name" : "ring",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "length",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "right" : {
                  "value" : "1",
                  "raw" : "1",
                  "type" : "Literal"
                },
                "type" : "BinaryExpression"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "test" : {
              "operator" : "<",
              "left" : {
                "name" : "nPts",
                "type" : "Identifier"
              },
              "right" : {
                "value" : "3",
                "raw" : "3",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "argument" : {
                "callee" : {
                  "name" : "IllegalArgumentException",
                  "type" : "Identifier"
                },
                "arguments" : [ {
                  "value" : "Ring has fewer than 4 points, so orientation cannot be determined",
                  "raw" : "\"Ring has fewer than 4 points, so orientation cannot be determined\"",
                  "type" : "Literal"
                } ],
                "type" : "NewExpression"
              },
              "type" : "ThrowStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "hiPt",
                "type" : "Identifier"
              },
              "init" : {
                "object" : {
                  "name" : "ring",
                  "type" : "Identifier"
                },
                "property" : {
                  "value" : "0",
                  "raw" : "0",
                  "type" : "Literal"
                },
                "computed" : true,
                "type" : "MemberExpression"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "hiIndex",
                "type" : "Identifier"
              },
              "init" : {
                "value" : "0",
                "raw" : "0",
                "type" : "Literal"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "init" : {
              "declarations" : [ {
                "id" : {
                  "name" : "i",
                  "type" : "Identifier"
                },
                "init" : {
                  "value" : "1",
                  "raw" : "1",
                  "type" : "Literal"
                },
                "type" : "VariableDeclarator"
              } ],
              "kind" : "var",
              "type" : "VariableDeclaration"
            },
            "test" : {
              "operator" : "<=",
              "left" : {
                "name" : "i",
                "type" : "Identifier"
              },
              "right" : {
                "name" : "nPts",
                "type" : "Identifier"
              },
              "type" : "BinaryExpression"
            },
            "update" : {
              "operator" : "++",
              "prefix" : false,
              "argument" : {
                "name" : "i",
                "type" : "Identifier"
              },
              "type" : "UnaryExpression"
            },
            "body" : {
              "body" : [ {
                "declarations" : [ {
                  "id" : {
                    "name" : "p",
                    "type" : "Identifier"
                  },
                  "init" : {
                    "object" : {
                      "name" : "ring",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "i",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "type" : "VariableDeclarator"
                } ],
                "kind" : "var",
                "type" : "VariableDeclaration"
              }, {
                "test" : {
                  "operator" : ">",
                  "left" : {
                    "object" : {
                      "name" : "p",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "right" : {
                    "object" : {
                      "name" : "hiPt",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "y",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "body" : [ {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "hiPt",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "p",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  }, {
                    "expression" : {
                      "operator" : "=",
                      "left" : {
                        "name" : "hiIndex",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "name" : "i",
                        "type" : "Identifier"
                      },
                      "type" : "AssignmentExpression"
                    },
                    "type" : "ExpressionStatement"
                  } ],
                  "type" : "BlockStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "type" : "ForStatement"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "iPrev",
                "type" : "Identifier"
              },
              "init" : {
                "name" : "hiIndex",
                "type" : "Identifier"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "iPrev",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "-",
                    "left" : {
                      "name" : "iPrev",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "1",
                      "raw" : "1",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              }, {
                "test" : {
                  "operator" : "<",
                  "left" : {
                    "name" : "iPrev",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "value" : "0",
                    "raw" : "0",
                    "type" : "Literal"
                  },
                  "type" : "BinaryExpression"
                },
                "consequent" : {
                  "expression" : {
                    "operator" : "=",
                    "left" : {
                      "name" : "iPrev",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "name" : "nPts",
                      "type" : "Identifier"
                    },
                    "type" : "AssignmentExpression"
                  },
                  "type" : "ExpressionStatement"
                },
                "alternate" : null,
                "type" : "IfStatement"
              } ],
              "type" : "BlockStatement"
            },
            "test" : {
              "operator" : "&&",
              "left" : {
                "callee" : {
                  "object" : {
                    "object" : {
                      "name" : "ring",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "iPrev",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "property" : {
                    "name" : "equals2D",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "hiPt",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "right" : {
                "operator" : "!==",
                "left" : {
                  "name" : "iPrev",
                  "type" : "Identifier"
                },
                "right" : {
                  "name" : "hiIndex",
                  "type" : "Identifier"
                },
                "type" : "BinaryExpression"
              },
              "type" : "BinaryExpression"
            },
            "type" : "DoWhileStatement"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "iNext",
                "type" : "Identifier"
              },
              "init" : {
                "name" : "hiIndex",
                "type" : "Identifier"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "body" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "iNext",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : "%",
                    "left" : {
                      "operator" : "+",
                      "left" : {
                        "name" : "iNext",
                        "type" : "Identifier"
                      },
                      "right" : {
                        "value" : "1",
                        "raw" : "1",
                        "type" : "Literal"
                      },
                      "type" : "BinaryExpression"
                    },
                    "right" : {
                      "name" : "nPts",
                      "type" : "Identifier"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "test" : {
              "operator" : "&&",
              "left" : {
                "callee" : {
                  "object" : {
                    "object" : {
                      "name" : "ring",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "iNext",
                      "type" : "Identifier"
                    },
                    "computed" : true,
                    "type" : "MemberExpression"
                  },
                  "property" : {
                    "name" : "equals2D",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "hiPt",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "right" : {
                "operator" : "!==",
                "left" : {
                  "name" : "iNext",
                  "type" : "Identifier"
                },
                "right" : {
                  "name" : "hiIndex",
                  "type" : "Identifier"
                },
                "type" : "BinaryExpression"
              },
              "type" : "BinaryExpression"
            },
            "type" : "DoWhileStatement"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "prev",
                "type" : "Identifier"
              },
              "init" : {
                "object" : {
                  "name" : "ring",
                  "type" : "Identifier"
                },
                "property" : {
                  "name" : "iPrev",
                  "type" : "Identifier"
                },
                "computed" : true,
                "type" : "MemberExpression"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "next",
                "type" : "Identifier"
              },
              "init" : {
                "object" : {
                  "name" : "ring",
                  "type" : "Identifier"
                },
                "property" : {
                  "name" : "iNext",
                  "type" : "Identifier"
                },
                "computed" : true,
                "type" : "MemberExpression"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "test" : {
              "operator" : "||",
              "left" : {
                "operator" : "||",
                "left" : {
                  "callee" : {
                    "object" : {
                      "name" : "prev",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "equals2D",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "hiPt",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "right" : {
                  "callee" : {
                    "object" : {
                      "name" : "next",
                      "type" : "Identifier"
                    },
                    "property" : {
                      "name" : "equals2D",
                      "type" : "Identifier"
                    },
                    "computed" : false,
                    "type" : "MemberExpression"
                  },
                  "arguments" : [ {
                    "name" : "hiPt",
                    "type" : "Identifier"
                  } ],
                  "type" : "CallExpression"
                },
                "type" : "BinaryExpression"
              },
              "right" : {
                "callee" : {
                  "object" : {
                    "name" : "prev",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "equals2D",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "next",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "argument" : {
                "value" : false,
                "raw" : "false",
                "type" : "Literal"
              },
              "type" : "ReturnStatement"
            },
            "alternate" : null,
            "type" : "IfStatement"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "disc",
                "type" : "Identifier"
              },
              "init" : {
                "callee" : {
                  "object" : {
                    "name" : "Orientation",
                    "type" : "Identifier"
                  },
                  "property" : {
                    "name" : "index",
                    "type" : "Identifier"
                  },
                  "computed" : false,
                  "type" : "MemberExpression"
                },
                "arguments" : [ {
                  "name" : "prev",
                  "type" : "Identifier"
                }, {
                  "name" : "hiPt",
                  "type" : "Identifier"
                }, {
                  "name" : "next",
                  "type" : "Identifier"
                } ],
                "type" : "CallExpression"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "declarations" : [ {
              "id" : {
                "name" : "isCCW",
                "type" : "Identifier"
              },
              "init" : {
                "value" : null,
                "raw" : "null",
                "type" : "Literal"
              },
              "type" : "VariableDeclarator"
            } ],
            "kind" : "var",
            "type" : "VariableDeclaration"
          }, {
            "test" : {
              "operator" : "===",
              "left" : {
                "name" : "disc",
                "type" : "Identifier"
              },
              "right" : {
                "value" : "0",
                "raw" : "0",
                "type" : "Literal"
              },
              "type" : "BinaryExpression"
            },
            "consequent" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "isCCW",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : ">",
                    "left" : {
                      "object" : {
                        "name" : "prev",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "right" : {
                      "object" : {
                        "name" : "next",
                        "type" : "Identifier"
                      },
                      "property" : {
                        "name" : "x",
                        "type" : "Identifier"
                      },
                      "computed" : false,
                      "type" : "MemberExpression"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "alternate" : {
              "body" : [ {
                "expression" : {
                  "operator" : "=",
                  "left" : {
                    "name" : "isCCW",
                    "type" : "Identifier"
                  },
                  "right" : {
                    "operator" : ">",
                    "left" : {
                      "name" : "disc",
                      "type" : "Identifier"
                    },
                    "right" : {
                      "value" : "0",
                      "raw" : "0",
                      "type" : "Literal"
                    },
                    "type" : "BinaryExpression"
                  },
                  "type" : "AssignmentExpression"
                },
                "type" : "ExpressionStatement"
              } ],
              "type" : "BlockStatement"
            },
            "type" : "IfStatement"
          }, {
            "argument" : {
              "name" : "isCCW",
              "type" : "Identifier"
            },
            "type" : "ReturnStatement"
          } ],
          "type" : "BlockStatement"
        },
        "generator" : false,
        "type" : "FunctionExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "CLOCKWISE",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "operator" : "-",
        "prefix" : true,
        "argument" : {
          "value" : "1",
          "raw" : "1",
          "type" : "Literal"
        },
        "type" : "UnaryExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "RIGHT",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "CLOCKWISE",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "COUNTERCLOCKWISE",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "value" : "1",
        "raw" : "1",
        "type" : "Literal"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "LEFT",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "COUNTERCLOCKWISE",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "COLLINEAR",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "value" : "0",
        "raw" : "0",
        "type" : "Literal"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  }, {
    "expression" : {
      "operator" : "=",
      "left" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "STRAIGHT",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "right" : {
        "object" : {
          "name" : "Orientation",
          "type" : "Identifier"
        },
        "property" : {
          "name" : "COLLINEAR",
          "type" : "Identifier"
        },
        "computed" : false,
        "type" : "MemberExpression"
      },
      "type" : "AssignmentExpression"
    },
    "type" : "ExpressionStatement"
  } ],
  "type" : "Program"
}