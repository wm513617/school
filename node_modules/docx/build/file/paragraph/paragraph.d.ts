import { Image } from "../../file/media";
import { Num } from "../../file/numbering/num";
import { XmlComponent } from "../../file/xml-components";
import { Border } from "./formatting/border";
import { IIndentAttributesProperties } from "./formatting/indent";
import { ISpacingProperties } from "./formatting/spacing";
import { LeaderType } from "./formatting/tab-stop";
import { Bookmark, Hyperlink } from "./links";
import { ParagraphProperties } from "./properties";
import { PictureRun, Run, TextRun } from "./run";
export declare class Paragraph extends XmlComponent {
    private readonly properties;
    constructor(text?: string);
    readonly paragraphProperties: ParagraphProperties;
    readonly Borders: Border;
    createBorder(): Paragraph;
    addRun(run: Run): Paragraph;
    addHyperLink(hyperlink: Hyperlink): Paragraph;
    addBookmark(bookmark: Bookmark): Paragraph;
    createTextRun(text: string): TextRun;
    addImage(image: Image): PictureRun;
    heading1(): Paragraph;
    heading2(): Paragraph;
    heading3(): Paragraph;
    heading4(): Paragraph;
    heading5(): Paragraph;
    heading6(): Paragraph;
    title(): Paragraph;
    center(): Paragraph;
    left(): Paragraph;
    right(): Paragraph;
    start(): Paragraph;
    end(): Paragraph;
    distribute(): Paragraph;
    justified(): Paragraph;
    thematicBreak(): Paragraph;
    pageBreak(): Paragraph;
    pageBreakBefore(): Paragraph;
    maxRightTabStop(leader?: LeaderType): Paragraph;
    leftTabStop(position: number, leader?: LeaderType): Paragraph;
    rightTabStop(position: number, leader?: LeaderType): Paragraph;
    centerTabStop(position: number, leader?: LeaderType): Paragraph;
    bullet(indentLevel?: number): Paragraph;
    setNumbering(numbering: Num, indentLevel: number): Paragraph;
    setCustomNumbering(numberId: number, indentLevel: number): Paragraph;
    style(styleId: string): Paragraph;
    indent(attrs: IIndentAttributesProperties): Paragraph;
    spacing(params: ISpacingProperties): Paragraph;
    contextualSpacing(value: boolean): Paragraph;
    keepNext(): Paragraph;
    keepLines(): Paragraph;
    referenceFootnote(id: number): Paragraph;
    addRunToFront(run: Run): Paragraph;
    bidirectional(): Paragraph;
    addSequentialIdentifier(identifier: string): Paragraph;
    outlineLevel(level: string): Paragraph;
}
