{"version":3,"sources":["../../../lib/doc/table.js"],"names":["colCache","require","Column","table","column","index","name","value","cacheState","_set","filterButton","style","totalsRowLabel","totalsRowFunction","totalsRowResult","totalsRowFormula","Table","worksheet","validate","store","Error","assign","o","dflt","undefined","assert","test","message","ref","columns","rows","tl","decodeAddress","row","col","width","filterHeight","tableHeight","autoFilterRef","encode","tableRef","forEach","i","getFormula","assignStyle","cell","Object","keys","key","count","headerRow","r","getRow","j","getCell","data","totalsRow","formula","result","_cache","values","rowNumber","push","splice","rowIndex","colIndex","target","prop","length","height","_assign","displyName","displayName","showFirstColumn","showLastColumn","showRowStripes","showColumnStripes","module","exports"],"mappings":"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","sourcesContent":["const colCache = require('./../utils/col-cache');\n\nclass Column {\n  // wrapper around column model, allowing access and manipulation\n  constructor(table, column, index) {\n    this.table = table;\n    this.column = column;\n    this.index = index;\n  }\n\n  _set(name, value) {\n    this.table.cacheState();\n    this.column[name] = value;\n  }\n\n  /* eslint-disable lines-between-class-members */\n  get name() { return this.column.name; }\n  set name(value) { this._set('name', value); }\n\n  get filterButton() { return this.column.filterButton; }\n  set filterButton(value) { this.column.filterButton = value; }\n\n  get style() { return this.column.style; }\n  set style(value) { this.column.style = value; }\n\n  get totalsRowLabel() { return this.column.totalsRowLabel; }\n  set totalsRowLabel(value) { this._set('totalsRowLabel', value); }\n\n  get totalsRowFunction() { return this.column.totalsRowFunction; }\n  set totalsRowFunction(value) { this._set('totalsRowFunction', value); }\n\n  get totalsRowResult() { return this.column.totalsRowResult; }\n  set totalsRowResult(value) { this._set('totalsRowResult', value); }\n\n  get totalsRowFormula() { return this.column.totalsRowFormula; }\n  set totalsRowFormula(value) { this._set('totalsRowFormula', value); }\n  /* eslint-enable lines-between-class-members */\n}\n\nclass Table {\n  constructor(worksheet, table) {\n    this.worksheet = worksheet;\n    if (table) {\n      this.table = table;\n      // check things are ok first\n      this.validate();\n\n      this.store();\n    }\n  }\n\n  getFormula(column) {\n    // get the correct formula to apply to the totals row\n    switch (column.totalsRowFunction) {\n      case 'none': return null;\n      case 'average': return `SUBTOTAL(101,${this.table.name}[${column.name}])`;\n      case 'countNums': return `SUBTOTAL(102,${this.table.name}[${column.name}])`;\n      case 'count': return `SUBTOTAL(103,${this.table.name}[${column.name}])`;\n      case 'max': return `SUBTOTAL(104,${this.table.name}[${column.name}])`;\n      case 'min': return `SUBTOTAL(105,${this.table.name}[${column.name}])`;\n      case 'stdDev': return `SUBTOTAL(106,${this.table.name}[${column.name}])`;\n      case 'var': return `SUBTOTAL(107,${this.table.name}[${column.name}])`;\n      case 'custom': return column.totalsRowFormula;\n      default:\n        throw new Error(`Invalid Totals Row Function: ${column.totalsRowFunction}`);\n    }\n  }\n\n  get width() {\n    // width of the table\n    return this.table.columns.length;\n  }\n\n  get height() {\n    // height of the table data\n    return this.table.rows.length;\n  }\n\n  get filterHeight() {\n    // height of the table data plus optional header row\n    return this.height + (this.table.headerRow ? 1 : 0);\n  }\n\n  get tableHeight() {\n    // full height of the table on the sheet\n    return this.filterHeight + (this.table.totalsRow ? 1 : 0);\n  }\n\n  validate() {\n    const {table} = this;\n    // set defaults and check is valid\n    const assign = (o, name, dflt) => {\n      if (o[name] === undefined) {\n        o[name] = dflt;\n      }\n    };\n    assign(table, 'headerRow', true);\n    assign(table, 'totalsRow', false);\n\n    assign(table, 'style', {});\n    assign(table.style, 'theme', 'TableStyleMedium2');\n    assign(table.style, 'showFirstColumn', false);\n    assign(table.style, 'showLastColumn', false);\n    assign(table.style, 'showRowStripes', false);\n    assign(table.style, 'showColumnStripes', false);\n\n    const assert = (test, message) => {\n      if (!test) {\n        throw new Error(message);\n      }\n    };\n    assert(table.ref, 'Table must have ref');\n    assert(table.columns, 'Table must have column definitions');\n    assert(table.rows, 'Table must have row definitions');\n\n    table.tl = colCache.decodeAddress(table.ref);\n    const {row, col} = table.tl;\n    assert(row > 0, 'Table must be on valid row');\n    assert(col > 0, 'Table must be on valid col');\n\n    const {width, filterHeight, tableHeight} = this;\n\n    // autoFilterRef is a range that includes optional headers only\n    table.autoFilterRef = colCache.encode(\n      row,\n      col,\n      row + filterHeight - 1,\n      col + width - 1\n    );\n\n    // tableRef is a range that includes optional headers and totals\n    table.tableRef = colCache.encode(\n      row,\n      col,\n      row + tableHeight - 1,\n      col + width - 1\n    );\n\n    table.columns.forEach((column, i) => {\n      assert(column.name, `Column ${i} must have a name`);\n      if (i === 0) {\n        assign(column, 'totalsRowLabel', 'Total');\n      } else {\n        assign(column, 'totalsRowFunction', 'none');\n        column.totalsRowFormula = this.getFormula(column);\n      }\n    });\n  }\n\n  store() {\n    // where the table needs to store table data, headers, footers in\n    // the sheet...\n    const assignStyle = (cell, style) => {\n      if (style) {\n        Object.keys(style).forEach(key => {\n          cell[key] = style[key];\n        });\n      }\n    };\n\n    const {worksheet, table} = this;\n    const {row, col} = table.tl;\n    let count = 0;\n    if (table.headerRow) {\n      const r = worksheet.getRow(row + count++);\n      table.columns.forEach((column, j) => {\n        const {style, name} = column;\n        const cell = r.getCell(col + j);\n        cell.value = name;\n        assignStyle(cell, style);\n      });\n    }\n    table.rows.forEach(data => {\n      const r = worksheet.getRow(row + count++);\n      data.forEach((value, j) => {\n        const cell = r.getCell(col + j);\n        cell.value = value;\n\n        assignStyle(cell, table.columns[j].style);\n      });\n    });\n\n    if (table.totalsRow) {\n      const r = worksheet.getRow(row + count++);\n      table.columns.forEach((column, j) => {\n        const cell = r.getCell(col + j);\n        if (j === 0) {\n          cell.value = column.totalsRowLabel;\n        } else {\n          const formula = this.getFormula(column);\n          if (formula) {\n            cell.value = {\n              formula: column.totalsRowFormula,\n              result: column.totalsRowResult,\n            };\n          } else {\n            cell.value = null;\n          }\n        }\n\n        assignStyle(cell, column.style);\n      });\n    }\n  }\n\n  load(worksheet) {\n    // where the table will read necessary features from a loaded sheet\n    const {table} = this;\n    const {row, col} = table.tl;\n    let count = 0;\n    if (table.headerRow) {\n      const r = worksheet.getRow(row + count++);\n      table.columns.forEach((column, j) => {\n        const cell = r.getCell(col + j);\n        cell.value = column.name;\n      });\n    }\n    table.rows.forEach(data => {\n      const r = worksheet.getRow(row + count++);\n      data.forEach((value, j) => {\n        const cell = r.getCell(col + j);\n        cell.value = value;\n      });\n    });\n\n    if (table.totalsRow) {\n      const r = worksheet.getRow(row + count++);\n      table.columns.forEach((column, j) => {\n        const cell = r.getCell(col + j);\n        if (j === 0) {\n          cell.value = column.totalsRowLabel;\n        } else {\n          const formula = this.getFormula(column);\n          if (formula) {\n            cell.value = {\n              formula: column.totalsRowFormula,\n              result: column.totalsRowResult,\n            };\n          }\n        }\n      });\n    }\n  }\n\n  get model() {\n    return this.table;\n  }\n\n  set model(value) {\n    this.table = value;\n  }\n\n  // ================================================================\n  // TODO: Mutating methods\n  cacheState() {\n    if (!this._cache) {\n      this._cache = {\n        ref: this.ref,\n        width: this.width,\n        tableHeight: this.tableHeight,\n      };\n    }\n  }\n\n  commit() {\n    // changes may have been made that might have on-sheet effects\n    if (!this._cache) {\n      return;\n    }\n\n    // check things are ok first\n    this.validate();\n\n    const ref = colCache.decodeAddress(this._cache.ref);\n    if (this.ref !== this._cache.ref) {\n      // wipe out whole table footprint at previous location\n      for (let i = 0; i < this._cache.tableHeight; i++) {\n        const row = this.worksheet.getRow(ref.row + i);\n        for (let j = 0; j < this._cache.width; j++) {\n          const cell = row.getCell(ref.col + j);\n          cell.value = null;\n        }\n      }\n    } else {\n      // clear out below table if it has shrunk\n      for (let i = this.tableHeight; i < this._cache.tableHeight; i++) {\n        const row = this.worksheet.getRow(ref.row + i);\n        for (let j = 0; j < this._cache.width; j++) {\n          const cell = row.getCell(ref.col + j);\n          cell.value = null;\n        }\n      }\n\n      // clear out to right of table if it has lost columns\n      for (let i = 0; i < this.tableHeight; i++) {\n        const row = this.worksheet.getRow(ref.row + i);\n        for (let j = this.width; j < this._cache.width; j++) {\n          const cell = row.getCell(ref.col + j);\n          cell.value = null;\n        }\n      }\n    }\n\n    this.store();\n  }\n\n  /* eslint-disable no-unused-vars */\n  addRow(values, rowNumber) {\n    // Add a row of data, either insert at rowNumber or append\n    this.cacheState();\n\n    if (rowNumber === undefined) {\n      this.table.rows.push(values);\n    } else {\n      this.table.rows.splice(rowNumber, 0, values);\n    }\n  }\n\n  removeRows(rowIndex, count = 1) {\n    // Remove a rows of data\n    this.cacheState();\n    this.table.rows.splice(rowIndex, count);\n  }\n\n  getColumn(colIndex) {\n    const column = this.table.columns[colIndex];\n    return new Column(this, column, colIndex);\n  }\n\n  addColumn(column, values, colIndex) {\n    // Add a new column, including column defn and values\n    // Inserts at colNumber or adds to the right\n    this.cacheState();\n\n    if (colIndex === undefined) {\n      this.table.columns.push(column);\n      this.table.rows.forEach((row, i) => {\n        row.push(values[i]);\n      });\n    } else {\n      this.table.columns.splice(colIndex, 0, column);\n      this.table.rows.forEach((row, i) => {\n        row.splice(colIndex, 0, values[i]);\n      });\n    }\n  }\n\n  removeColumns(colIndex, count = 1) {\n    // Remove a column with data\n    this.cacheState();\n\n    this.table.columns.splice(colIndex, count);\n    this.table.rows.forEach(row => {\n      row.splice(colIndex, count);\n    });\n  }\n\n  _assign(target, prop, value) {\n    this.cacheState();\n    target[prop] = value;\n  }\n\n  /* eslint-disable lines-between-class-members */\n  get ref() { return this.table.ref; }\n  set ref(value) { this._assign(this.table, 'ref', value); }\n\n  get name() { return this.table.name; }\n  set name(value) { this.table.name = value; }\n\n  get displayName() { return this.table.displyName || this.table.name; }\n  set displayNamename(value) { this.table.displayName = value; }\n\n  get headerRow() { return this.table.headerRow; }\n  set headerRow(value) { this._assign(this.table, 'headerRow', value); }\n\n  get totalsRow() { return this.table.totalsRow; }\n  set totalsRow(value) { this._assign(this.table, 'totalsRow', value); }\n\n  get theme() { return this.table.style.name; }\n  set theme(value) { this.table.style.name = value; }\n\n  get showFirstColumn() { return this.table.style.showFirstColumn; }\n  set showFirstColumn(value) { this.table.style.showFirstColumn = value; }\n\n  get showLastColumn() { return this.table.style.showLastColumn; }\n  set showLastColumn(value) { this.table.style.showLastColumn = value; }\n\n  get showRowStripes() { return this.table.style.showRowStripes; }\n  set showRowStripes(value) { this.table.style.showRowStripes = value; }\n\n  get showColumnStripes() { return this.table.style.showColumnStripes; }\n  set showColumnStripes(value) { this.table.style.showColumnStripes = value; }\n  /* eslint-enable lines-between-class-members */\n\n}\n\nmodule.exports = Table;\n"],"file":"table.js"}