{"version":3,"sources":["../../../../../lib/xlsx/xform/core/relationships-xform.js"],"names":["XmlStream","require","BaseXform","RelationshipXform","RelationshipsXform","map","Relationship","xmlStream","model","_values","openXml","StdDocAttributes","openNode","RELATIONSHIPS_ATTRIBUTES","self","forEach","relationship","render","closeNode","node","parser","parseOpen","name","Error","JSON","stringify","text","parseText","parseClose","push","undefined","xmlns","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,2BAAD,CAAzB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAME,iBAAiB,GAAGF,OAAO,CAAC,sBAAD,CAAjC;;IAEMG,kB;;;;;AACJ,gCAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACTC,MAAAA,YAAY,EAAE,IAAIH,iBAAJ;AADL,KAAX;AAHY;AAMb;;;;2BAEMI,S,EAAWC,K,EAAO;AACvBA,MAAAA,KAAK,GAAGA,KAAK,IAAI,KAAKC,OAAtB;AACAF,MAAAA,SAAS,CAACG,OAAV,CAAkBV,SAAS,CAACW,gBAA5B;AACAJ,MAAAA,SAAS,CAACK,QAAV,CAAmB,eAAnB,EAAoCR,kBAAkB,CAACS,wBAAvD;AAEA,UAAMC,IAAI,GAAG,IAAb;AACAN,MAAAA,KAAK,CAACO,OAAN,CAAc,UAAAC,YAAY,EAAI;AAC5BF,QAAAA,IAAI,CAACT,GAAL,CAASC,YAAT,CAAsBW,MAAtB,CAA6BV,SAA7B,EAAwCS,YAAxC;AACD,OAFD;AAIAT,MAAAA,SAAS,CAACW,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AACD,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,eAAL;AACE,eAAKd,KAAL,GAAa,EAAb;AACA,iBAAO,IAAP;;AACF;AACE,eAAKY,MAAL,GAAc,KAAKf,GAAL,CAASc,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,mBAAO,IAAP;AACD;;AACD,gBAAM,IAAII,KAAJ,6CAA+CC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAA/C,EAAN;AAVJ;AAYD;;;8BAESO,I,EAAM;AACd,UAAI,KAAKN,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYO,SAAZ,CAAsBD,IAAtB;AACD;AACF;;;+BAEUJ,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYQ,UAAZ,CAAuBN,IAAvB,CAAL,EAAmC;AACjC,eAAKd,KAAL,CAAWqB,IAAX,CAAgB,KAAKT,MAAL,CAAYZ,KAA5B;AACA,eAAKY,MAAL,GAAcU,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,cAAQR,IAAR;AACE,aAAK,eAAL;AACE,iBAAO,KAAP;;AACF;AACE,gBAAM,IAAIC,KAAJ,8CAAgDD,IAAhD,EAAN;AAJJ;AAMD;;;;EA7D8BpB,S;;AAgEjCE,kBAAkB,CAACS,wBAAnB,GAA8C;AAC5CkB,EAAAA,KAAK,EAAE;AADqC,CAA9C;AAIAC,MAAM,CAACC,OAAP,GAAiB7B,kBAAjB","sourcesContent":["const XmlStream = require('../../../utils/xml-stream');\nconst BaseXform = require('../base-xform');\n\nconst RelationshipXform = require('./relationship-xform');\n\nclass RelationshipsXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      Relationship: new RelationshipXform(),\n    };\n  }\n\n  render(xmlStream, model) {\n    model = model || this._values;\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('Relationships', RelationshipsXform.RELATIONSHIPS_ATTRIBUTES);\n\n    const self = this;\n    model.forEach(relationship => {\n      self.map.Relationship.render(xmlStream, relationship);\n    });\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'Relationships':\n        this.model = [];\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n          return true;\n        }\n        throw new Error(`Unexpected xml node in parseOpen: ${JSON.stringify(node)}`);\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.model.push(this.parser.model);\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'Relationships':\n        return false;\n      default:\n        throw new Error(`Unexpected xml node in parseClose: ${name}`);\n    }\n  }\n}\n\nRelationshipsXform.RELATIONSHIPS_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/package/2006/relationships',\n};\n\nmodule.exports = RelationshipsXform;\n"],"file":"relationships-xform.js"}