{"version":3,"sources":["../../../../../lib/xlsx/xform/sheet/print-options-xform.js"],"names":["_","require","BaseXform","booleanToXml","model","undefined","PrintOptionsXform","xmlStream","attributes","headings","showRowColHeaders","gridLines","showGridLines","horizontalCentered","verticalCentered","some","value","leafNode","tag","node","name","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,CAAC,GAAGC,OAAO,CAAC,2BAAD,CAAjB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AAEA,SAASE,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,GAAG,GAAH,GAASC,SAArB;AACD;;IAEKC,iB;;;;;;;;;;;;;2BAKGC,S,EAAWH,K,EAAO;AACvB,UAAIA,KAAJ,EAAW;AACT,YAAMI,UAAU,GAAG;AACjBC,UAAAA,QAAQ,EAAEN,YAAY,CAACC,KAAK,CAACM,iBAAP,CADL;AAEjBC,UAAAA,SAAS,EAAER,YAAY,CAACC,KAAK,CAACQ,aAAP,CAFN;AAGjBC,UAAAA,kBAAkB,EAAEV,YAAY,CAACC,KAAK,CAACS,kBAAP,CAHf;AAIjBC,UAAAA,gBAAgB,EAAEX,YAAY,CAACC,KAAK,CAACU,gBAAP;AAJb,SAAnB;;AAMA,YAAId,CAAC,CAACe,IAAF,CAAOP,UAAP,EAAmB,UAAAQ,KAAK;AAAA,iBAAIA,KAAK,KAAKX,SAAd;AAAA,SAAxB,CAAJ,EAAsD;AACpDE,UAAAA,SAAS,CAACU,QAAV,CAAmB,KAAKC,GAAxB,EAA6BV,UAA7B;AACD;AACF;AACF;;;8BAESW,I,EAAM;AACd,cAAQA,IAAI,CAACC,IAAb;AACE,aAAK,KAAKF,GAAV;AACE,eAAKd,KAAL,GAAa;AACXM,YAAAA,iBAAiB,EAAES,IAAI,CAACX,UAAL,CAAgBC,QAAhB,KAA6B,GADrC;AAEXG,YAAAA,aAAa,EAAEO,IAAI,CAACX,UAAL,CAAgBG,SAAhB,KAA8B,GAFlC;AAGXE,YAAAA,kBAAkB,EAAEM,IAAI,CAACX,UAAL,CAAgBK,kBAAhB,KAAuC,GAHhD;AAIXC,YAAAA,gBAAgB,EAAEK,IAAI,CAACX,UAAL,CAAgBM,gBAAhB,KAAqC;AAJ5C,WAAb;AAMA,iBAAO,IAAP;;AACF;AACE,iBAAO,KAAP;AAVJ;AAYD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBArCS;AACR,aAAO,cAAP;AACD;;;;EAH6BZ,S;;AAyChCmB,MAAM,CAACC,OAAP,GAAiBhB,iBAAjB","sourcesContent":["const _ = require('../../../utils/under-dash');\nconst BaseXform = require('../base-xform');\n\nfunction booleanToXml(model) {\n  return model ? '1' : undefined;\n}\n\nclass PrintOptionsXform extends BaseXform {\n  get tag() {\n    return 'printOptions';\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      const attributes = {\n        headings: booleanToXml(model.showRowColHeaders),\n        gridLines: booleanToXml(model.showGridLines),\n        horizontalCentered: booleanToXml(model.horizontalCentered),\n        verticalCentered: booleanToXml(model.verticalCentered),\n      };\n      if (_.some(attributes, value => value !== undefined)) {\n        xmlStream.leafNode(this.tag, attributes);\n      }\n    }\n  }\n\n  parseOpen(node) {\n    switch (node.name) {\n      case this.tag:\n        this.model = {\n          showRowColHeaders: node.attributes.headings === '1',\n          showGridLines: node.attributes.gridLines === '1',\n          horizontalCentered: node.attributes.horizontalCentered === '1',\n          verticalCentered: node.attributes.verticalCentered === '1',\n        };\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = PrintOptionsXform;\n"],"file":"print-options-xform.js"}