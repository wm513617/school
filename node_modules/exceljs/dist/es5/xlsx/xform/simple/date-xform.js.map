{"version":3,"sources":["../../../../../lib/xlsx/xform/simple/date-xform.js"],"names":["BaseXform","require","DateXform","options","tag","attr","attrs","_format","format","dt","Number","isNaN","getTime","toISOString","e","_parse","parse","str","Date","xmlStream","model","openNode","addAttributes","addAttribute","writeText","closeNode","node","name","attributes","text","push","join","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;IAEMC,S;;;;;AACJ,qBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB;AAEA,UAAKC,GAAL,GAAWD,OAAO,CAACC,GAAnB;AACA,UAAKC,IAAL,GAAYF,OAAO,CAACE,IAApB;AACA,UAAKC,KAAL,GAAaH,OAAO,CAACG,KAArB;;AACA,UAAKC,OAAL,GACEJ,OAAO,CAACK,MAAR,IACA,UAASC,EAAT,EAAa;AACX,UAAI;AACF,YAAIC,MAAM,CAACC,KAAP,CAAaF,EAAE,CAACG,OAAH,EAAb,CAAJ,EAAgC,OAAO,EAAP;AAChC,eAAOH,EAAE,CAACI,WAAH,EAAP;AACD,OAHD,CAGE,OAAOC,CAAP,EAAU;AACV,eAAO,EAAP;AACD;AACF,KATH;;AAUA,UAAKC,MAAL,GACEZ,OAAO,CAACa,KAAR,IACA,UAASC,GAAT,EAAc;AACZ,aAAO,IAAIC,IAAJ,CAASD,GAAT,CAAP;AACD,KAJH;;AAhBmB;AAqBpB;;;;2BAEME,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAJ,EAAW;AACTD,QAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKjB,GAAxB;;AACA,YAAI,KAAKE,KAAT,EAAgB;AACda,UAAAA,SAAS,CAACG,aAAV,CAAwB,KAAKhB,KAA7B;AACD;;AACD,YAAI,KAAKD,IAAT,EAAe;AACbc,UAAAA,SAAS,CAACI,YAAV,CAAuB,KAAKlB,IAA5B,EAAkC,KAAKE,OAAL,CAAaa,KAAb,CAAlC;AACD,SAFD,MAEO;AACLD,UAAAA,SAAS,CAACK,SAAV,CAAoB,KAAKjB,OAAL,CAAaa,KAAb,CAApB;AACD;;AACDD,QAAAA,SAAS,CAACM,SAAV;AACD;AACF;;;8BAESC,I,EAAM;AACd,UAAIA,IAAI,CAACC,IAAL,KAAc,KAAKvB,GAAvB,EAA4B;AAC1B,YAAI,KAAKC,IAAT,EAAe;AACb,eAAKe,KAAL,GAAa,KAAKL,MAAL,CAAYW,IAAI,CAACE,UAAL,CAAgB,KAAKvB,IAArB,CAAZ,CAAb;AACD,SAFD,MAEO;AACL,eAAKwB,IAAL,GAAY,EAAZ;AACD;AACF;AACF;;;8BAESA,I,EAAM;AACd,UAAI,CAAC,KAAKxB,IAAV,EAAgB;AACd,aAAKwB,IAAL,CAAUC,IAAV,CAAeD,IAAf;AACD;AACF;;;iCAEY;AACX,UAAI,CAAC,KAAKxB,IAAV,EAAgB;AACd,aAAKe,KAAL,GAAa,KAAKL,MAAL,CAAY,KAAKc,IAAL,CAAUE,IAAV,CAAe,EAAf,CAAZ,CAAb;AACD;;AACD,aAAO,KAAP;AACD;;;;EA5DqB/B,S;;AA+DxBgC,MAAM,CAACC,OAAP,GAAiB/B,SAAjB","sourcesContent":["const BaseXform = require('../base-xform');\n\nclass DateXform extends BaseXform {\n  constructor(options) {\n    super();\n\n    this.tag = options.tag;\n    this.attr = options.attr;\n    this.attrs = options.attrs;\n    this._format =\n      options.format ||\n      function(dt) {\n        try {\n          if (Number.isNaN(dt.getTime())) return '';\n          return dt.toISOString();\n        } catch (e) {\n          return '';\n        }\n      };\n    this._parse =\n      options.parse ||\n      function(str) {\n        return new Date(str);\n      };\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.tag);\n      if (this.attrs) {\n        xmlStream.addAttributes(this.attrs);\n      }\n      if (this.attr) {\n        xmlStream.addAttribute(this.attr, this._format(model));\n      } else {\n        xmlStream.writeText(this._format(model));\n      }\n      xmlStream.closeNode();\n    }\n  }\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      if (this.attr) {\n        this.model = this._parse(node.attributes[this.attr]);\n      } else {\n        this.text = [];\n      }\n    }\n  }\n\n  parseText(text) {\n    if (!this.attr) {\n      this.text.push(text);\n    }\n  }\n\n  parseClose() {\n    if (!this.attr) {\n      this.model = this._parse(this.text.join(''));\n    }\n    return false;\n  }\n}\n\nmodule.exports = DateXform;\n"],"file":"date-xform.js"}