{"version":3,"sources":["../../../../../lib/xlsx/xform/table/table-column-xform.js"],"names":["BaseXform","require","TableColumnXform","model","options","id","index","xmlStream","leafNode","tag","toString","name","totalsRowLabel","totalsRowFunction","dxfId","node","attributes","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;IAEMC,gB;;;;;;;;;;;;;4BAKIC,K,EAAOC,O,EAAS;AACtBD,MAAAA,KAAK,CAACE,EAAN,GAAWD,OAAO,CAACE,KAAR,GAAgB,CAA3B;AACD;;;2BAEMC,S,EAAWJ,K,EAAO;AACvBI,MAAAA,SAAS,CAACC,QAAV,CACE,KAAKC,GADP,EAEE;AACEJ,QAAAA,EAAE,EAAEF,KAAK,CAACE,EAAN,CAASK,QAAT,EADN;AAEEC,QAAAA,IAAI,EAAER,KAAK,CAACQ,IAFd;AAGEC,QAAAA,cAAc,EAAET,KAAK,CAACS,cAHxB;AAIEC,QAAAA,iBAAiB,EAAEV,KAAK,CAACU,iBAJ3B;AAKEC,QAAAA,KAAK,EAAEX,KAAK,CAACW;AALf,OAFF;AAUA,aAAO,IAAP;AACD;;;8BAESC,I,EAAM;AACd,UAAIA,IAAI,CAACJ,IAAL,KAAc,KAAKF,GAAvB,EAA4B;AAAA,YACnBO,UADmB,GACLD,IADK,CACnBC,UADmB;AAE1B,aAAKb,KAAL,GAAa;AACXQ,UAAAA,IAAI,EAAEK,UAAU,CAACL,IADN;AAEXC,UAAAA,cAAc,EAAEI,UAAU,CAACJ,cAFhB;AAGXC,UAAAA,iBAAiB,EAAEG,UAAU,CAACH,iBAHnB;AAIXC,UAAAA,KAAK,EAAEE,UAAU,CAACF;AAJP,SAAb;AAMA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBAxCS;AACR,aAAO,aAAP;AACD;;;;EAH4Bd,S;;AA4C/BiB,MAAM,CAACC,OAAP,GAAiBhB,gBAAjB","sourcesContent":["const BaseXform = require('../base-xform');\n\nclass TableColumnXform extends BaseXform {\n  get tag() {\n    return 'tableColumn';\n  }\n\n  prepare(model, options) {\n    model.id = options.index + 1;\n  }\n\n  render(xmlStream, model) {\n    xmlStream.leafNode(\n      this.tag,\n      {\n        id: model.id.toString(),\n        name: model.name,\n        totalsRowLabel: model.totalsRowLabel,\n        totalsRowFunction: model.totalsRowFunction,\n        dxfId: model.dxfId,\n      }\n    );\n    return true;\n  }\n\n  parseOpen(node) {\n    if (node.name === this.tag) {\n      const {attributes} = node;\n      this.model = {\n        name: attributes.name,\n        totalsRowLabel: attributes.totalsRowLabel,\n        totalsRowFunction: attributes.totalsRowFunction,\n        dxfId: attributes.dxfId,\n      };\n      return true;\n    }\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = TableColumnXform;\n"],"file":"table-column-xform.js"}