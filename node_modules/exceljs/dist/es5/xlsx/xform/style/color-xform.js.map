{"version":3,"sources":["../../../../../lib/xlsx/xform/style/color-xform.js"],"names":["BaseXform","require","ColorXform","name","xmlStream","model","openNode","argb","addAttribute","theme","undefined","tint","indexed","closeNode","node","attributes","rgb","parseInt","parseFloat","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB,C,CAEA;;;IACMC,U;;;;;AACJ,sBAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB,qFADgB,CAGhB;;AACA,UAAKA,IAAL,GAAYA,IAAI,IAAI,OAApB;AAJgB;AAKjB;;;;2BAMMC,S,EAAWC,K,EAAO;AACvB,UAAIA,KAAJ,EAAW;AACTD,QAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKH,IAAxB;;AACA,YAAIE,KAAK,CAACE,IAAV,EAAgB;AACdH,UAAAA,SAAS,CAACI,YAAV,CAAuB,KAAvB,EAA8BH,KAAK,CAACE,IAApC;AACD,SAFD,MAEO,IAAIF,KAAK,CAACI,KAAN,KAAgBC,SAApB,EAA+B;AACpCN,UAAAA,SAAS,CAACI,YAAV,CAAuB,OAAvB,EAAgCH,KAAK,CAACI,KAAtC;;AACA,cAAIJ,KAAK,CAACM,IAAN,KAAeD,SAAnB,EAA8B;AAC5BN,YAAAA,SAAS,CAACI,YAAV,CAAuB,MAAvB,EAA+BH,KAAK,CAACM,IAArC;AACD;AACF,SALM,MAKA,IAAIN,KAAK,CAACO,OAAN,KAAkBF,SAAtB,EAAiC;AACtCN,UAAAA,SAAS,CAACI,YAAV,CAAuB,SAAvB,EAAkCH,KAAK,CAACO,OAAxC;AACD,SAFM,MAEA;AACLR,UAAAA,SAAS,CAACI,YAAV,CAAuB,MAAvB,EAA+B,GAA/B;AACD;;AACDJ,QAAAA,SAAS,CAACS,SAAV;AACA,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;8BAESC,I,EAAM;AACd,UAAIA,IAAI,CAACX,IAAL,KAAc,KAAKA,IAAvB,EAA6B;AAC3B,YAAIW,IAAI,CAACC,UAAL,CAAgBC,GAApB,EAAyB;AACvB,eAAKX,KAAL,GAAa;AAACE,YAAAA,IAAI,EAAEO,IAAI,CAACC,UAAL,CAAgBC;AAAvB,WAAb;AACD,SAFD,MAEO,IAAIF,IAAI,CAACC,UAAL,CAAgBN,KAApB,EAA2B;AAChC,eAAKJ,KAAL,GAAa;AAACI,YAAAA,KAAK,EAAEQ,QAAQ,CAACH,IAAI,CAACC,UAAL,CAAgBN,KAAjB,EAAwB,EAAxB;AAAhB,WAAb;;AACA,cAAIK,IAAI,CAACC,UAAL,CAAgBJ,IAApB,EAA0B;AACxB,iBAAKN,KAAL,CAAWM,IAAX,GAAkBO,UAAU,CAACJ,IAAI,CAACC,UAAL,CAAgBJ,IAAjB,CAA5B;AACD;AACF,SALM,MAKA,IAAIG,IAAI,CAACC,UAAL,CAAgBH,OAApB,EAA6B;AAClC,eAAKP,KAAL,GAAa;AAACO,YAAAA,OAAO,EAAEK,QAAQ,CAACH,IAAI,CAACC,UAAL,CAAgBH,OAAjB,EAA0B,EAA1B;AAAlB,WAAb;AACD,SAFM,MAEA;AACL,eAAKP,KAAL,GAAaK,SAAb;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBAhDS;AACR,aAAO,KAAKP,IAAZ;AACD;;;;EAVsBH,S;;AA2DzBmB,MAAM,CAACC,OAAP,GAAiBlB,UAAjB","sourcesContent":["const BaseXform = require('../base-xform');\n\n// Color encapsulates translation from color model to/from xlsx\nclass ColorXform extends BaseXform {\n  constructor(name) {\n    super();\n\n    // this.name controls the xm node name\n    this.name = name || 'color';\n  }\n\n  get tag() {\n    return this.name;\n  }\n\n  render(xmlStream, model) {\n    if (model) {\n      xmlStream.openNode(this.name);\n      if (model.argb) {\n        xmlStream.addAttribute('rgb', model.argb);\n      } else if (model.theme !== undefined) {\n        xmlStream.addAttribute('theme', model.theme);\n        if (model.tint !== undefined) {\n          xmlStream.addAttribute('tint', model.tint);\n        }\n      } else if (model.indexed !== undefined) {\n        xmlStream.addAttribute('indexed', model.indexed);\n      } else {\n        xmlStream.addAttribute('auto', '1');\n      }\n      xmlStream.closeNode();\n      return true;\n    }\n    return false;\n  }\n\n  parseOpen(node) {\n    if (node.name === this.name) {\n      if (node.attributes.rgb) {\n        this.model = {argb: node.attributes.rgb};\n      } else if (node.attributes.theme) {\n        this.model = {theme: parseInt(node.attributes.theme, 10)};\n        if (node.attributes.tint) {\n          this.model.tint = parseFloat(node.attributes.tint);\n        }\n      } else if (node.attributes.indexed) {\n        this.model = {indexed: parseInt(node.attributes.indexed, 10)};\n      } else {\n        this.model = undefined;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = ColorXform;\n"],"file":"color-xform.js"}