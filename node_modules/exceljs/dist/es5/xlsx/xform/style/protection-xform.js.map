{"version":3,"sources":["../../../../../lib/xlsx/xform/style/protection-xform.js"],"names":["BaseXform","require","validation","value","dflt","undefined","ProtectionXform","xmlStream","model","addRollback","openNode","isValid","add","name","addAttribute","locked","hidden","closeNode","commit","rollback","node","attributes","isSignificant","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AAEA,IAAMC,UAAU,GAAG;AAAA,8BACTC,KADS,EACFC,IADE,EACI;AACnB,QAAID,KAAK,KAAKE,SAAd,EAAyB;AACvB,aAAOD,IAAP;AACD;;AACD,WAAOD,KAAP;AACD;AANgB,CAAnB,C,CASA;;IACMG,e;;;;;;;;;;;;;2BAKGC,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,WAAV;AACAF,MAAAA,SAAS,CAACG,QAAV,CAAmB,YAAnB;AAEA,UAAIC,OAAO,GAAG,KAAd;;AACA,eAASC,GAAT,CAAaC,IAAb,EAAmBV,KAAnB,EAA0B;AACxB,YAAIA,KAAK,KAAKE,SAAd,EAAyB;AACvBE,UAAAA,SAAS,CAACO,YAAV,CAAuBD,IAAvB,EAA6BV,KAA7B;AACAQ,UAAAA,OAAO,GAAG,IAAV;AACD;AACF;;AACDC,MAAAA,GAAG,CAAC,QAAD,EAAWV,UAAU,WAAV,CAAmBM,KAAK,CAACO,MAAzB,EAAiC,IAAjC,IAAyCV,SAAzC,GAAqD,GAAhE,CAAH;AACAO,MAAAA,GAAG,CAAC,QAAD,EAAWV,UAAU,WAAV,CAAmBM,KAAK,CAACQ,MAAzB,EAAiC,KAAjC,IAA0C,GAA1C,GAAgDX,SAA3D,CAAH;AAEAE,MAAAA,SAAS,CAACU,SAAV;;AAEA,UAAIN,OAAJ,EAAa;AACXJ,QAAAA,SAAS,CAACW,MAAV;AACD,OAFD,MAEO;AACLX,QAAAA,SAAS,CAACY,QAAV;AACD;AACF;;;8BAESC,I,EAAM;AACd,UAAMZ,KAAK,GAAG;AACZO,QAAAA,MAAM,EAAE,EAAEK,IAAI,CAACC,UAAL,CAAgBN,MAAhB,KAA2B,GAA7B,CADI;AAEZC,QAAAA,MAAM,EAAGI,IAAI,CAACC,UAAL,CAAgBL,MAAhB,KAA2B;AAFxB,OAAd,CADc,CAMd;;AACA,UAAMM,aAAa,GAAG,CAACd,KAAK,CAACO,MAAP,IAAiBP,KAAK,CAACQ,MAA7C;AAEA,WAAKR,KAAL,GAAac,aAAa,GAAGd,KAAH,GAAW,IAArC;AACD;;;gCAEW,CAAE;;;iCAED;AACX,aAAO,KAAP;AACD;;;wBA3CS;AACR,aAAO,YAAP;AACD;;;;EAH2BR,S;;AA+C9BuB,MAAM,CAACC,OAAP,GAAiBlB,eAAjB","sourcesContent":["const BaseXform = require('../base-xform');\n\nconst validation = {\n  boolean(value, dflt) {\n    if (value === undefined) {\n      return dflt;\n    }\n    return value;\n  },\n};\n\n// Protection encapsulates translation from style.protection model to/from xlsx\nclass ProtectionXform extends BaseXform {\n  get tag() {\n    return 'protection';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.addRollback();\n    xmlStream.openNode('protection');\n\n    let isValid = false;\n    function add(name, value) {\n      if (value !== undefined) {\n        xmlStream.addAttribute(name, value);\n        isValid = true;\n      }\n    }\n    add('locked', validation.boolean(model.locked, true) ? undefined : '0');\n    add('hidden', validation.boolean(model.hidden, false) ? '1' : undefined);\n\n    xmlStream.closeNode();\n\n    if (isValid) {\n      xmlStream.commit();\n    } else {\n      xmlStream.rollback();\n    }\n  }\n\n  parseOpen(node) {\n    const model = {\n      locked: !(node.attributes.locked === '0'),\n      hidden: (node.attributes.hidden === '1'),\n    };\n\n    // only want to record models that differ from defaults\n    const isSignificant = !model.locked || model.hidden;\n\n    this.model = isSignificant ? model : null;\n  }\n\n  parseText() {}\n\n  parseClose() {\n    return false;\n  }\n}\n\nmodule.exports = ProtectionXform;\n"],"file":"protection-xform.js"}