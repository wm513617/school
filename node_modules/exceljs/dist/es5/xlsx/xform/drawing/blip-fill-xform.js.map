{"version":3,"sources":["../../../../../lib/xlsx/xform/drawing/blip-fill-xform.js"],"names":["BaseXform","require","BlipXform","BlipFillXform","map","xmlStream","model","openNode","tag","render","leafNode","closeNode","node","parser","parseOpen","name","reset","parseClose","undefined","module","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAGC,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAMC,SAAS,GAAGD,OAAO,CAAC,cAAD,CAAzB;;IAEME,a;;;;;AACJ,2BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,GAAL,GAAW;AACT,gBAAU,IAAIF,SAAJ;AADD,KAAX;AAHY;AAMb;;;;2BAMMG,S,EAAWC,K,EAAO;AACvBD,MAAAA,SAAS,CAACE,QAAV,CAAmB,KAAKC,GAAxB;AAEA,WAAKJ,GAAL,CAAS,QAAT,EAAmBK,MAAnB,CAA0BJ,SAA1B,EAAqCC,KAArC,EAHuB,CAKvB;;AACAD,MAAAA,SAAS,CAACE,QAAV,CAAmB,WAAnB;AACAF,MAAAA,SAAS,CAACK,QAAV,CAAmB,YAAnB;AACAL,MAAAA,SAAS,CAACM,SAAV;AAEAN,MAAAA,SAAS,CAACM,SAAV;AACD;;;8BAESC,I,EAAM;AACd,UAAI,KAAKC,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACA,eAAO,IAAP;AACD;;AAED,cAAQA,IAAI,CAACG,IAAb;AACE,aAAK,KAAKP,GAAV;AACE,eAAKQ,KAAL;AACA;;AAEF;AACE,eAAKH,MAAL,GAAc,KAAKT,GAAL,CAASQ,IAAI,CAACG,IAAd,CAAd;;AACA,cAAI,KAAKF,MAAT,EAAiB;AACf,iBAAKA,MAAL,CAAYC,SAAZ,CAAsBF,IAAtB;AACD;;AACD;AAVJ;;AAYA,aAAO,IAAP;AACD;;;gCAEW,CAAE;;;+BAEHG,I,EAAM;AACf,UAAI,KAAKF,MAAT,EAAiB;AACf,YAAI,CAAC,KAAKA,MAAL,CAAYI,UAAZ,CAAuBF,IAAvB,CAAL,EAAmC;AACjC,eAAKF,MAAL,GAAcK,SAAd;AACD;;AACD,eAAO,IAAP;AACD;;AACD,cAAQH,IAAR;AACE,aAAK,KAAKP,GAAV;AACE,eAAKF,KAAL,GAAa,KAAKF,GAAL,CAAS,QAAT,EAAmBE,KAAhC;AACA,iBAAO,KAAP;;AAEF;AACE,iBAAO,IAAP;AANJ;AAQD;;;wBAvDS;AACR,aAAO,cAAP;AACD;;;;EAXyBN,S;;AAmE5BmB,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["const BaseXform = require('../base-xform');\nconst BlipXform = require('./blip-xform');\n\nclass BlipFillXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      'a:blip': new BlipXform(),\n    };\n  }\n\n  get tag() {\n    return 'xdr:blipFill';\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openNode(this.tag);\n\n    this.map['a:blip'].render(xmlStream, model);\n\n    // TODO: options for this + parsing\n    xmlStream.openNode('a:stretch');\n    xmlStream.leafNode('a:fillRect');\n    xmlStream.closeNode();\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n\n    switch (node.name) {\n      case this.tag:\n        this.reset();\n        break;\n\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        break;\n    }\n    return true;\n  }\n\n  parseText() {}\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case this.tag:\n        this.model = this.map['a:blip'].model;\n        return false;\n\n      default:\n        return true;\n    }\n  }\n}\n\nmodule.exports = BlipFillXform;\n"],"file":"blip-fill-xform.js"}