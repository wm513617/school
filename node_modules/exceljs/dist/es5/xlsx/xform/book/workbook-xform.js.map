{"version":3,"sources":["../../../../../lib/xlsx/xform/book/workbook-xform.js"],"names":["_","require","colCache","XmlStream","BaseXform","StaticXform","ListXform","DefinedNameXform","SheetXform","WorkbookViewXform","WorkbookPropertiesXform","WorkbookXform","map","fileVersion","STATIC_XFORMS","workbookPr","bookViews","tag","count","childXform","sheets","definedNames","calcPr","model","worksheets","printAreas","index","forEach","sheet","pageSetup","printArea","split","definedName","name","ranges","localSheetId","push","printTitlesRow","printTitlesColumn","titlesColumns","titlesRows","length","concat","media","medium","i","type","xmlStream","openXml","StdDocAttributes","openNode","WORKBOOK_ATTRIBUTES","render","properties","views","closeNode","node","parser","parseOpen","text","parseText","parseClose","undefined","rels","workbookRels","reduce","rel","Id","worksheet","rId","worksheetHash","Target","id","state","each","range","decodeEx","dimensions","rangeString","join","dollarRegex","rowRangeRegex","rowRangeMatches","match","replace","columnRangeRegex","columnRangeMatches","xmlns","$","appName","lastEdited","lowestEdited","rupBuild","calcId","module","exports"],"mappings":"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","sourcesContent":["const _ = require('../../../utils/under-dash');\n\nconst colCache = require('../../../utils/col-cache');\nconst XmlStream = require('../../../utils/xml-stream');\n\nconst BaseXform = require('../base-xform');\nconst StaticXform = require('../static-xform');\nconst ListXform = require('../list-xform');\nconst DefinedNameXform = require('./defined-name-xform');\nconst SheetXform = require('./sheet-xform');\nconst WorkbookViewXform = require('./workbook-view-xform');\nconst WorkbookPropertiesXform = require('./workbook-properties-xform');\n\nclass WorkbookXform extends BaseXform {\n  constructor() {\n    super();\n\n    this.map = {\n      fileVersion: WorkbookXform.STATIC_XFORMS.fileVersion,\n      workbookPr: new WorkbookPropertiesXform(),\n      bookViews: new ListXform({tag: 'bookViews', count: false, childXform: new WorkbookViewXform()}),\n      sheets: new ListXform({tag: 'sheets', count: false, childXform: new SheetXform()}),\n      definedNames: new ListXform({tag: 'definedNames', count: false, childXform: new DefinedNameXform()}),\n      calcPr: WorkbookXform.STATIC_XFORMS.calcPr,\n    };\n  }\n\n  prepare(model) {\n    model.sheets = model.worksheets;\n\n    // collate all the print areas from all of the sheets and add them to the defined names\n    const printAreas = [];\n    let index = 0; // sheets is sparse array - calc index manually\n    model.sheets.forEach(sheet => {\n      if (sheet.pageSetup && sheet.pageSetup.printArea) {\n        const printArea = sheet.pageSetup.printArea.split(':');\n        const definedName = {\n          name: '_xlnm.Print_Area',\n          ranges: [`'${sheet.name}'!$${printArea[0]}:$${printArea[1]}`],\n          localSheetId: index,\n        };\n        printAreas.push(definedName);\n      }\n      if (sheet.pageSetup && (sheet.pageSetup.printTitlesRow || sheet.pageSetup.printTitlesColumn)) {\n        const ranges = [];\n\n        if (sheet.pageSetup.printTitlesColumn) {\n          const titlesColumns = sheet.pageSetup.printTitlesColumn.split(':');\n          ranges.push(`'${sheet.name}'!$${titlesColumns[0]}:$${titlesColumns[1]}`);\n        }\n\n        if (sheet.pageSetup.printTitlesRow) {\n          const titlesRows = sheet.pageSetup.printTitlesRow.split(':');\n          ranges.push(`'${sheet.name}'!$${titlesRows[0]}:$${titlesRows[1]}`);\n        }\n\n        const definedName = {\n          name: '_xlnm.Print_Titles',\n          ranges,\n          localSheetId: index,\n        };\n\n        printAreas.push(definedName);\n      }\n      index++;\n    });\n    if (printAreas.length) {\n      model.definedNames = model.definedNames.concat(printAreas);\n    }\n\n\n    (model.media || []).forEach((medium, i) => {\n      // assign name\n      medium.name = medium.type + (i + 1);\n    });\n  }\n\n  render(xmlStream, model) {\n    xmlStream.openXml(XmlStream.StdDocAttributes);\n    xmlStream.openNode('workbook', WorkbookXform.WORKBOOK_ATTRIBUTES);\n\n    this.map.fileVersion.render(xmlStream);\n    this.map.workbookPr.render(xmlStream, model.properties);\n    this.map.bookViews.render(xmlStream, model.views);\n    this.map.sheets.render(xmlStream, model.sheets);\n    this.map.definedNames.render(xmlStream, model.definedNames);\n    this.map.calcPr.render(xmlStream);\n\n    xmlStream.closeNode();\n  }\n\n  parseOpen(node) {\n    if (this.parser) {\n      this.parser.parseOpen(node);\n      return true;\n    }\n    switch (node.name) {\n      case 'workbook':\n        return true;\n      default:\n        this.parser = this.map[node.name];\n        if (this.parser) {\n          this.parser.parseOpen(node);\n        }\n        return true;\n    }\n  }\n\n  parseText(text) {\n    if (this.parser) {\n      this.parser.parseText(text);\n    }\n  }\n\n  parseClose(name) {\n    if (this.parser) {\n      if (!this.parser.parseClose(name)) {\n        this.parser = undefined;\n      }\n      return true;\n    }\n    switch (name) {\n      case 'workbook':\n        this.model = {\n          sheets: this.map.sheets.model,\n          properties: this.map.workbookPr.model || {},\n          views: this.map.bookViews.model,\n        };\n        if (this.map.definedNames.model) {\n          this.model.definedNames = this.map.definedNames.model;\n        }\n\n        return false;\n      default:\n        // not quite sure how we get here!\n        return true;\n    }\n  }\n\n  reconcile(model) {\n    const rels = (model.workbookRels || []).reduce((map, rel) => {\n      map[rel.Id] = rel;\n      return map;\n    }, {});\n\n    // reconcile sheet ids, rIds and names\n    const worksheets = [];\n    let worksheet;\n    let index = 0;\n\n    (model.sheets || []).forEach(sheet => {\n      const rel = rels[sheet.rId];\n      if (!rel) {\n        return;\n      }\n      worksheet = model.worksheetHash[`xl/${rel.Target}`];\n      // If there are \"chartsheets\" in the file, rel.Target will\n      // come out as chartsheets/sheet1.xml or similar here, and\n      // that won't be in model.worksheetHash.\n      // As we don't have the infrastructure to support chartsheets,\n      // we will ignore them for now:\n      if (worksheet) {\n        worksheet.name = sheet.name;\n        worksheet.id = sheet.id;\n        worksheet.state = sheet.state;\n        worksheets[index++] = worksheet;\n      }\n    });\n\n    // reconcile print areas\n    const definedNames = [];\n    _.each(model.definedNames, definedName => {\n      if (definedName.name === '_xlnm.Print_Area') {\n        worksheet = worksheets[definedName.localSheetId];\n        if (worksheet) {\n          if (!worksheet.pageSetup) {\n            worksheet.pageSetup = {};\n          }\n          const range = colCache.decodeEx(definedName.ranges[0]);\n          worksheet.pageSetup.printArea = range.dimensions;\n        }\n      } else if (definedName.name === '_xlnm.Print_Titles') {\n        worksheet = worksheets[definedName.localSheetId];\n        if (worksheet) {\n          if (!worksheet.pageSetup) {\n            worksheet.pageSetup = {};\n          }\n\n          const rangeString = definedName.ranges.join(',');\n\n          const dollarRegex = /\\$/g;\n\n          const rowRangeRegex = /\\$\\d+:\\$\\d+/;\n          const rowRangeMatches = rangeString.match(rowRangeRegex);\n\n          if (rowRangeMatches && rowRangeMatches.length) {\n            const range = rowRangeMatches[0];\n            worksheet.pageSetup.printTitlesRow = range.replace(dollarRegex, '');\n          }\n\n          const columnRangeRegex = /\\$[A-Z]+:\\$[A-Z]+/;\n          const columnRangeMatches = rangeString.match(columnRangeRegex);\n\n          if (columnRangeMatches && columnRangeMatches.length) {\n            const range = columnRangeMatches[0];\n            worksheet.pageSetup.printTitlesColumn = range.replace(dollarRegex, '');\n          }\n        }\n      } else {\n        definedNames.push(definedName);\n      }\n    });\n    model.definedNames = definedNames;\n\n    // used by sheets to build their image models\n    model.media.forEach((media, i) => {\n      media.index = i;\n    });\n  }\n}\n\nWorkbookXform.WORKBOOK_ATTRIBUTES = {\n  xmlns: 'http://schemas.openxmlformats.org/spreadsheetml/2006/main',\n    'xmlns:r': 'http://schemas.openxmlformats.org/officeDocument/2006/relationships',\n    'xmlns:mc': 'http://schemas.openxmlformats.org/markup-compatibility/2006',\n    'mc:Ignorable': 'x15',\n    'xmlns:x15': 'http://schemas.microsoft.com/office/spreadsheetml/2010/11/main',\n};\nWorkbookXform.STATIC_XFORMS = {\n  fileVersion: new StaticXform({\n    tag: 'fileVersion',\n    $: {appName: 'xl', lastEdited: 5, lowestEdited: 5, rupBuild: 9303},\n  }),\n  calcPr: new StaticXform({tag: 'calcPr', $: {calcId: 171027}}),\n};\n\nmodule.exports = WorkbookXform;\n"],"file":"workbook-xform.js"}