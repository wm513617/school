{"version":3,"sources":["../../../lib/xlsx/xlsx.js"],"names":["fs","require","ZipStream","StreamBuf","PromiseLib","utils","XmlStream","StylesXform","CoreXform","SharedStringsXform","RelationshipsXform","ContentTypesXform","AppXform","WorkbookXform","WorksheetXform","DrawingXform","TableXform","CommentsXform","VmlNotesXform","theme1Xml","fsReadFileAsync","filename","options","Promise","resolve","reject","readFile","error","data","XLSX","workbook","stream","exists","then","Error","createReadStream","read","close","xform","parseStream","model","workbookXform","worksheetXform","drawingXform","tableXform","reconcile","drawingOptions","media","mediaIndex","Object","keys","drawings","forEach","name","drawing","drawingRel","drawingRels","rels","reduce","o","rel","Id","tableOptions","styles","values","tables","table","sheetOptions","sharedStrings","date1904","properties","comments","worksheets","worksheet","relationships","worksheetRels","sheetNo","worksheetHash","globalRels","workbookRels","sheetDefs","entry","match","path","push","undefined","lastDot","lastIndexOf","extension","substr","streamBuf","on","length","medium","type","buffer","toBuffer","pipe","themes","toString","autodrain","promises","ZipReader","getEntryType","promise","entryPath","parseRels","parseWorkbook","sheets","definedNames","views","appXform","appProperties","assign","company","manager","coreXform","coreProperties","processWorksheetEntry","processWorksheetRelsEntry","processThemeEntry","processMediaEntry","processDrawingEntry","processCommentEntry","processTableEntry","processDrawingRelsEntry","processIgnoreEntry","destroy","all","emit","zipStream","createInputStream","base64","Buffer","from","write","end","zip","map","append","dataimg64","content","substring","indexOf","relsXform","prepare","xml","toXml","tableXml","target","theme1","Type","RelType","OfficeDocument","Target","CoreProperties","ExtenderProperties","count","Styles","Theme","SharedStrings","rId","Worksheet","id","relationshipsXform","commentsXform","vmlNotesXform","xmlStream","render","finalize","creator","lastModifiedBy","created","Date","modified","useSharedStrings","useStyles","Mock","worksheetOptions","drawingsCount","commentRefs","tableCount","ZipWriter","prepareModel","addContentTypes","addOfficeRels","addWorkbookRels","addWorksheets","addSharedStrings","addDrawings","addTables","addThemes","addStyles","addMedia","afters","addApp","addCore","addWorkbook","_finalize","createWriteStream","module","exports"],"mappings":"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","sourcesContent":["const fs = require('fs');\nconst ZipStream = require('../utils/zip-stream');\nconst StreamBuf = require('../utils/stream-buf');\nconst PromiseLib = require('../utils/promise');\n\nconst utils = require('../utils/utils');\nconst XmlStream = require('../utils/xml-stream');\n\nconst StylesXform = require('./xform/style/styles-xform');\n\nconst CoreXform = require('./xform/core/core-xform');\nconst SharedStringsXform = require('./xform/strings/shared-strings-xform');\nconst RelationshipsXform = require('./xform/core/relationships-xform');\nconst ContentTypesXform = require('./xform/core/content-types-xform');\nconst AppXform = require('./xform/core/app-xform');\nconst WorkbookXform = require('./xform/book/workbook-xform');\nconst WorksheetXform = require('./xform/sheet/worksheet-xform');\nconst DrawingXform = require('./xform/drawing/drawing-xform');\nconst TableXform = require('./xform/table/table-xform');\nconst CommentsXform = require('./xform/comment/comments-xform');\nconst VmlNotesXform = require('./xform/comment/vml-notes-xform');\n\nconst theme1Xml = require('./xml/theme1.js');\n\nfunction fsReadFileAsync(filename, options) {\n  return new PromiseLib.Promise((resolve, reject) => {\n    fs.readFile(filename, options, (error, data) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(data);\n      }\n    });\n  });\n}\n\nclass XLSX {\n  constructor(workbook) {\n    this.workbook = workbook;\n  }\n\n  // ===============================================================================\n  // Workbook\n  // =========================================================================\n  // Read\n\n  readFile(filename, options) {\n    let stream;\n    return utils.fs\n      .exists(filename)\n      .then(exists => {\n        if (!exists) {\n          throw new Error(`File not found: ${filename}`);\n        }\n        stream = fs.createReadStream(filename);\n        return this.read(stream, options).catch(error => {\n          stream.close();\n          throw error;\n        });\n      })\n      .then(workbook => {\n        stream.close();\n        return workbook;\n      });\n  }\n\n  parseRels(stream) {\n    const xform = new RelationshipsXform();\n    return xform.parseStream(stream);\n  }\n\n  parseWorkbook(stream) {\n    const xform = new WorkbookXform();\n    return xform.parseStream(stream);\n  }\n\n  parseSharedStrings(stream) {\n    const xform = new SharedStringsXform();\n    return xform.parseStream(stream);\n  }\n\n  reconcile(model, options) {\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform(options);\n    const drawingXform = new DrawingXform();\n    const tableXform = new TableXform();\n\n    workbookXform.reconcile(model);\n\n    // reconcile drawings with their rels\n    const drawingOptions = {\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n    };\n    Object.keys(model.drawings).forEach(name => {\n      const drawing = model.drawings[name];\n      const drawingRel = model.drawingRels[name];\n      if (drawingRel) {\n        drawingOptions.rels = drawingRel.reduce((o, rel) => {\n          o[rel.Id] = rel;\n          return o;\n        }, {});\n        drawingXform.reconcile(drawing, drawingOptions);\n      }\n    });\n\n    // reconcile tables with the default styles\n    const tableOptions = {\n      styles: model.styles,\n    };\n    Object.values(model.tables).forEach(table => {\n      tableXform.reconcile(table, tableOptions);\n    });\n\n    const sheetOptions = {\n      styles: model.styles,\n      sharedStrings: model.sharedStrings,\n      media: model.media,\n      mediaIndex: model.mediaIndex,\n      date1904: model.properties && model.properties.date1904,\n      drawings: model.drawings,\n      comments: model.comments,\n      tables: model.tables,\n    };\n    model.worksheets.forEach(worksheet => {\n      worksheet.relationships = model.worksheetRels[worksheet.sheetNo];\n      worksheetXform.reconcile(worksheet, sheetOptions);\n    });\n\n    // delete unnecessary parts\n    delete model.worksheetHash;\n    delete model.worksheetRels;\n    delete model.globalRels;\n    delete model.sharedStrings;\n    delete model.workbookRels;\n    delete model.sheetDefs;\n    delete model.styles;\n    delete model.mediaIndex;\n    delete model.drawings;\n    delete model.drawingRels;\n  }\n\n  processWorksheetEntry(entry, model, options) {\n    const match = entry.path.match(/xl\\/worksheets\\/sheet(\\d+)[.]xml/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new WorksheetXform(options);\n      return xform.parseStream(entry)\n        .then(worksheet => {\n          worksheet.sheetNo = sheetNo;\n          model.worksheetHash[entry.path] = worksheet;\n          model.worksheets.push(worksheet);\n        });\n    }\n    return undefined;\n  }\n\n  processCommentEntry(entry, model) {\n    const match = entry.path.match(/xl\\/(comments\\d+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new CommentsXform();\n      return xform.parseStream(entry)\n        .then(comments => {\n          model.comments[`../${name}.xml`] = comments;\n        });\n    }\n    return undefined;\n  }\n\n  processTableEntry(entry, model) {\n    const match = entry.path.match(/xl\\/tables\\/(table\\d+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new TableXform();\n      return xform.parseStream(entry)\n        .then(table => {\n          model.tables[`../tables/${name}.xml`] = table;\n        });\n    }\n    return undefined;\n  }\n\n  processWorksheetRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/worksheets\\/_rels\\/sheet(\\d+)[.]xml.rels/);\n    if (match) {\n      const sheetNo = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry)\n        .then(relationships => {\n          model.worksheetRels[sheetNo] = relationships;\n        });\n    }\n    return undefined;\n  }\n\n  processMediaEntry(entry, model) {\n    const match = entry.path.match(/xl\\/media\\/([a-zA-Z0-9]+[.][a-zA-Z0-9]{3,4})$/);\n    if (match) {\n      const filename = match[1];\n      const lastDot = filename.lastIndexOf('.');\n      if (lastDot === -1) {\n        // if we can't determine extension, ignore it\n        return undefined;\n      }\n      const extension = filename.substr(lastDot + 1);\n      const name = filename.substr(0, lastDot);\n      return new PromiseLib.Promise((resolve, reject) => {\n        const streamBuf = new StreamBuf();\n        streamBuf.on('finish', () => {\n          model.mediaIndex[filename] = model.media.length;\n          model.mediaIndex[name] = model.media.length;\n          const medium = {\n            type: 'image',\n            name,\n            extension,\n            buffer: streamBuf.toBuffer(),\n          };\n          model.media.push(medium);\n          resolve();\n        });\n        entry.on('error', error => {\n          reject(error);\n        });\n        entry.pipe(streamBuf);\n      });\n    }\n    return undefined;\n  }\n\n  processDrawingEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      const name = match[1];\n      const xform = new DrawingXform();\n      return xform.parseStream(entry)\n        .then(drawing => {\n          model.drawings[name] = drawing;\n        });\n    }\n    return undefined;\n  }\n\n  processDrawingRelsEntry(entry, model) {\n    const match = entry.path.match(/xl\\/drawings\\/_rels\\/([a-zA-Z0-9]+)[.]xml[.]rels/);\n    if (match) {\n      const name = match[1];\n      const xform = new RelationshipsXform();\n      return xform.parseStream(entry)\n        .then(relationships => {\n          model.drawingRels[name] = relationships;\n        });\n    }\n    return undefined;\n  }\n\n  processThemeEntry(entry, model) {\n    const match = entry.path.match(/xl\\/theme\\/([a-zA-Z0-9]+)[.]xml/);\n    if (match) {\n      return new PromiseLib.Promise((resolve, reject) => {\n        const name = match[1];\n        // TODO: stream entry into buffer and store the xml in the model.themes[]\n        const stream = new StreamBuf();\n        entry.on('error', reject);\n        stream.on('error', reject);\n        stream.on('finish', () => {\n          model.themes[name] = stream.read().toString();\n          resolve();\n        });\n        entry.pipe(stream);\n      });\n    }\n    return undefined;\n  }\n\n  processIgnoreEntry(entry) {\n    entry.autodrain();\n  }\n\n  createInputStream(options) {\n    const model = {\n      worksheets: [],\n      worksheetHash: {},\n      worksheetRels: [],\n      themes: {},\n      media: [],\n      mediaIndex: {},\n      drawings: {},\n      drawingRels: {},\n      comments: {},\n      tables: {},\n    };\n\n    // we have to be prepared to read the zip entries in whatever order they arrive\n    const promises = [];\n    const stream = new ZipStream.ZipReader({\n      getEntryType: path => (path.match(/xl\\/media\\//) ? 'nodebuffer' : 'string'),\n    });\n    stream.on('entry', entry => {\n      let promise = null;\n\n      let entryPath = entry.path;\n      if (entryPath[0] === '/') {\n        entryPath = entryPath.substr(1);\n      }\n      switch (entryPath) {\n        case '_rels/.rels':\n          promise = this.parseRels(entry)\n            .then(relationships => {\n              model.globalRels = relationships;\n            });\n          break;\n\n        case 'xl/workbook.xml':\n          promise = this.parseWorkbook(entry)\n            .then(workbook => {\n              model.sheets = workbook.sheets;\n              model.definedNames = workbook.definedNames;\n              model.views = workbook.views;\n              model.properties = workbook.properties;\n            });\n          break;\n\n        case 'xl/_rels/workbook.xml.rels':\n          promise = this.parseRels(entry)\n            .then(relationships => {\n              model.workbookRels = relationships;\n            });\n          break;\n\n        case 'xl/sharedStrings.xml':\n          model.sharedStrings = new SharedStringsXform();\n          promise = model.sharedStrings.parseStream(entry);\n          break;\n\n        case 'xl/styles.xml':\n          model.styles = new StylesXform();\n          promise = model.styles.parseStream(entry);\n          break;\n\n        case 'docProps/app.xml': {\n          const appXform = new AppXform();\n          promise = appXform.parseStream(entry)\n            .then(appProperties => {\n              Object.assign(model, {\n                company: appProperties.company,\n                manager: appProperties.manager,\n              });\n            });\n          break;\n        }\n\n        case 'docProps/core.xml': {\n          const coreXform = new CoreXform();\n          promise = coreXform.parseStream(entry)\n            .then(coreProperties => {\n              Object.assign(model, coreProperties);\n            });\n          break;\n        }\n\n        default:\n          promise =\n            this.processWorksheetEntry(entry, model, options) ||\n            this.processWorksheetRelsEntry(entry, model) ||\n            this.processThemeEntry(entry, model) ||\n            this.processMediaEntry(entry, model) ||\n            this.processDrawingEntry(entry, model) ||\n            this.processCommentEntry(entry, model) ||\n            this.processTableEntry(entry, model) ||\n            this.processDrawingRelsEntry(entry, model) ||\n            this.processIgnoreEntry(entry);\n          break;\n      }\n\n      if (promise) {\n        promise = promise.catch(error => {\n          stream.destroy(error);\n          throw error;\n        });\n\n        promises.push(promise);\n        promise = null;\n      }\n    });\n    stream.on('finished', () => {\n      PromiseLib.Promise.all(promises)\n        .then(() => {\n          this.reconcile(model, options);\n\n          // apply model\n          this.workbook.model = model;\n        })\n        .then(() => {\n          stream.emit('done');\n        })\n        .catch(error => {\n          stream.emit('error', error);\n        });\n    });\n    return stream;\n  }\n\n  read(stream, options) {\n    options = options || {};\n    const zipStream = this.createInputStream(options);\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n      stream.pipe(zipStream);\n    });\n  }\n\n  load(data, options) {\n    if (options === undefined) {\n      options = {};\n    }\n    const zipStream = this.createInputStream();\n    return new PromiseLib.Promise((resolve, reject) => {\n      zipStream\n        .on('done', () => {\n          resolve(this.workbook);\n        })\n        .on('error', error => {\n          reject(error);\n        });\n\n      if (options.base64) {\n        const buffer = Buffer.from(data.toString(), 'base64');\n        zipStream.write(buffer);\n      } else {\n        zipStream.write(data);\n      }\n      zipStream.end();\n    });\n  }\n\n  // =========================================================================\n  // Write\n\n  addMedia(zip, model) {\n    return PromiseLib.Promise.all(\n      model.media.map(medium => {\n        if (medium.type === 'image') {\n          const filename = `xl/media/${medium.name}.${medium.extension}`;\n          if (medium.filename) {\n            return fsReadFileAsync(medium.filename)\n              .then(data => {\n                zip.append(data, {name: filename});\n              });\n          }\n          if (medium.buffer) {\n            return new PromiseLib.Promise(resolve => {\n              zip.append(medium.buffer, {name: filename});\n              resolve();\n            });\n          }\n          if (medium.base64) {\n            return new PromiseLib.Promise(resolve => {\n              const dataimg64 = medium.base64;\n              const content = dataimg64.substring(dataimg64.indexOf(',') + 1);\n              zip.append(content, {name: filename, base64: true});\n              resolve();\n            });\n          }\n        }\n        return PromiseLib.Promise.reject(new Error('Unsupported media'));\n      })\n    );\n  }\n\n  addDrawings(zip, model) {\n    const drawingXform = new DrawingXform();\n    const relsXform = new RelationshipsXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {drawing} = worksheet;\n      if (drawing) {\n        drawingXform.prepare(drawing, {});\n        let xml = drawingXform.toXml(drawing);\n        zip.append(xml, {name: `xl/drawings/${drawing.name}.xml`});\n\n        xml = relsXform.toXml(drawing.rels);\n        zip.append(xml, {name: `xl/drawings/_rels/${drawing.name}.xml.rels`});\n      }\n    });\n  }\n\n  addTables(zip, model) {\n    const tableXform = new TableXform();\n\n    model.worksheets.forEach(worksheet => {\n      const {tables} = worksheet;\n      tables.forEach(table => {\n        tableXform.prepare(table, {});\n        const tableXml = tableXform.toXml(table);\n        zip.append(tableXml, {name: `xl/tables/${table.target}`});\n      });\n    });\n  }\n\n  addContentTypes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new ContentTypesXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, {name: '[Content_Types].xml'});\n      resolve();\n    });\n  }\n\n  addApp(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new AppXform();\n      const xml = xform.toXml(model);\n      zip.append(xml, {name: 'docProps/app.xml'});\n      resolve();\n    });\n  }\n\n  addCore(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const coreXform = new CoreXform();\n      zip.append(coreXform.toXml(model), {name: 'docProps/core.xml'});\n      resolve();\n    });\n  }\n\n  addThemes(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const themes = model.themes || {theme1: theme1Xml};\n      Object.keys(themes).forEach(name => {\n        const xml = themes[name];\n        const path = `xl/theme/${name}.xml`;\n        zip.append(xml, {name: path});\n      });\n      resolve();\n    });\n  }\n\n  addOfficeRels(zip) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml([\n        {Id: 'rId1', Type: XLSX.RelType.OfficeDocument, Target: 'xl/workbook.xml'},\n        {Id: 'rId2', Type: XLSX.RelType.CoreProperties, Target: 'docProps/core.xml'},\n        {Id: 'rId3', Type: XLSX.RelType.ExtenderProperties, Target: 'docProps/app.xml'},\n      ]);\n      zip.append(xml, {name: '_rels/.rels'});\n      resolve();\n    });\n  }\n\n  addWorkbookRels(zip, model) {\n    let count = 1;\n    const relationships = [\n      {Id: `rId${count++}`, Type: XLSX.RelType.Styles, Target: 'styles.xml'},\n      {Id: `rId${count++}`, Type: XLSX.RelType.Theme, Target: 'theme/theme1.xml'},\n    ];\n    if (model.sharedStrings.count) {\n      relationships.push({Id: `rId${count++}`, Type: XLSX.RelType.SharedStrings, Target: 'sharedStrings.xml'});\n    }\n    model.worksheets.forEach(worksheet => {\n      worksheet.rId = `rId${count++}`;\n      relationships.push({Id: worksheet.rId, Type: XLSX.RelType.Worksheet, Target: `worksheets/sheet${worksheet.id}.xml`});\n    });\n    return new PromiseLib.Promise(resolve => {\n      const xform = new RelationshipsXform();\n      const xml = xform.toXml(relationships);\n      zip.append(xml, {name: 'xl/_rels/workbook.xml.rels'});\n      resolve();\n    });\n  }\n\n  addSharedStrings(zip, model) {\n    if (!model.sharedStrings || !model.sharedStrings.count) {\n      return PromiseLib.Promise.resolve();\n    }\n    return new PromiseLib.Promise(resolve => {\n      zip.append(model.sharedStrings.xml, {name: 'xl/sharedStrings.xml'});\n      resolve();\n    });\n  }\n\n  addStyles(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const {xml} = model.styles;\n      if (xml) {\n        zip.append(xml, {name: 'xl/styles.xml'});\n      }\n      resolve();\n    });\n  }\n\n  addWorkbook(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      const xform = new WorkbookXform();\n      zip.append(xform.toXml(model), {name: 'xl/workbook.xml'});\n      resolve();\n    });\n  }\n\n  addWorksheets(zip, model) {\n    return new PromiseLib.Promise(resolve => {\n      // preparation phase\n      const worksheetXform = new WorksheetXform();\n      const relationshipsXform = new RelationshipsXform();\n      const commentsXform = new CommentsXform();\n      const vmlNotesXform = new VmlNotesXform();\n\n      // write sheets\n      model.worksheets.forEach(worksheet => {\n        let xmlStream = new XmlStream();\n        worksheetXform.render(xmlStream, worksheet);\n        zip.append(xmlStream.xml, {name: `xl/worksheets/sheet${worksheet.id}.xml`});\n\n        if (worksheet.rels && worksheet.rels.length) {\n          xmlStream = new XmlStream();\n          relationshipsXform.render(xmlStream, worksheet.rels);\n          zip.append(xmlStream.xml, {name: `xl/worksheets/_rels/sheet${worksheet.id}.xml.rels`});\n        }\n\n        if (worksheet.comments.length > 0) {\n          xmlStream = new XmlStream();\n          commentsXform.render(xmlStream, worksheet);\n          zip.append(xmlStream.xml, {name: `xl/comments${worksheet.id}.xml`});\n\n          xmlStream = new XmlStream();\n          vmlNotesXform.render(xmlStream, worksheet);\n          zip.append(xmlStream.xml, {name: `xl/drawings/vmlDrawing${worksheet.id}.vml`});\n        }\n      });\n\n      resolve();\n    });\n  }\n\n  _finalize(zip) {\n    return new PromiseLib.Promise((resolve, reject) => {\n      zip.on('finish', () => {\n        resolve(this);\n      });\n      zip.on('error', reject);\n      zip.finalize();\n    });\n  }\n\n  prepareModel(model, options) {\n    // ensure following properties have sane values\n    model.creator = model.creator || 'ExcelJS';\n    model.lastModifiedBy = model.lastModifiedBy || 'ExcelJS';\n    model.created = model.created || new Date();\n    model.modified = model.modified || new Date();\n\n    model.useSharedStrings = options.useSharedStrings !== undefined ? options.useSharedStrings : true;\n    model.useStyles = options.useStyles !== undefined ? options.useStyles : true;\n\n    // Manage the shared strings\n    model.sharedStrings = new SharedStringsXform();\n\n    // add a style manager to handle cell formats, fonts, etc.\n    model.styles = model.useStyles ? new StylesXform(true) : new StylesXform.Mock();\n\n    // prepare all of the things before the render\n    const workbookXform = new WorkbookXform();\n    const worksheetXform = new WorksheetXform();\n\n    workbookXform.prepare(model);\n\n    const worksheetOptions = {\n      sharedStrings: model.sharedStrings,\n      styles: model.styles,\n      date1904: model.properties.date1904,\n      drawingsCount: 0,\n      media: model.media,\n    };\n    worksheetOptions.drawings = model.drawings = [];\n    worksheetOptions.commentRefs = model.commentRefs = [];\n    let tableCount = 0;\n    model.tables = [];\n    model.worksheets.forEach(worksheet => {\n      // assign unique filenames to tables\n      worksheet.tables.forEach(table => {\n        tableCount++;\n        table.target = `table${tableCount}.xml`;\n        table.id = tableCount;\n        model.tables.push(table);\n      });\n\n      worksheetXform.prepare(worksheet, worksheetOptions);\n    });\n\n    // TODO: workbook drawing list\n  }\n\n  write(stream, options) {\n    options = options || {};\n    const {model} = this.workbook;\n    const zip = new ZipStream.ZipWriter(options.zip);\n    zip.pipe(stream);\n\n    this.prepareModel(model, options);\n\n    // render\n    return PromiseLib.Promise.resolve()\n      .then(() => this.addContentTypes(zip, model))\n      .then(() => this.addOfficeRels(zip, model))\n      .then(() => this.addWorkbookRels(zip, model))\n      .then(() => this.addWorksheets(zip, model))\n      .then(() => this.addSharedStrings(zip, model)) // always after worksheets\n      .then(() => this.addDrawings(zip, model))\n      .then(() => this.addTables(zip, model))\n      .then(() => {\n        const promises = [this.addThemes(zip, model), this.addStyles(zip, model)];\n        return PromiseLib.Promise.all(promises);\n      })\n      .then(() => this.addMedia(zip, model))\n      .then(() => {\n        const afters = [this.addApp(zip, model), this.addCore(zip, model)];\n        return PromiseLib.Promise.all(afters);\n      })\n      .then(() => this.addWorkbook(zip, model))\n      .then(() => this._finalize(zip));\n  }\n\n  writeFile(filename, options) {\n    const stream = fs.createWriteStream(filename);\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      stream.on('finish', () => {\n        resolve();\n      });\n      stream.on('error', error => {\n        reject(error);\n      });\n\n      this\n        .write(stream, options)\n        .then(() => {\n          stream.end();\n        })\n        .catch(error => {\n          reject(error);\n        });\n    });\n  }\n\n  writeBuffer(options) {\n    const stream = new StreamBuf();\n    return this.write(stream, options)\n      .then(() => stream.read());\n  }\n}\n\nXLSX.RelType = require('./rel-type');\n\nmodule.exports = XLSX;\n"],"file":"xlsx.js"}