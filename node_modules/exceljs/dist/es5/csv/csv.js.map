{"version":3,"sources":["../../../lib/csv/csv.js"],"names":["fs","require","csv","moment","PromiseLib","StreamBuf","utils","CSV","module","exports","workbook","worksheet","SpecialValues","error","prototype","readFile","filename","options","self","stream","exists","then","Error","createReadStream","read","close","Promise","resolve","reject","csvStream","createInputStream","on","pipe","addWorksheet","sheetName","dateFormats","ISO_8601","map","datum","datumNumber","Number","isNaN","dt","isValid","Date","valueOf","special","undefined","data","addRow","emit","write","getWorksheet","sheetId","createWriteStream","dateFormat","dateUTC","value","text","hyperlink","formula","result","utc","format","JSON","stringify","includeEmptyRows","lastRow","eachRow","row","rowNumber","values","shift","end","writeFile","streamOptions","encoding","writeBuffer"],"mappings":"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","sourcesContent":["'use strict';\n\nconst fs = require('fs');\nconst csv = require('fast-csv');\nconst moment = require('moment');\nconst PromiseLib = require('../utils/promise');\nconst StreamBuf = require('../utils/stream-buf');\n\nconst utils = require('../utils/utils');\n\nconst CSV = (module.exports = function(workbook) {\n  this.workbook = workbook;\n  this.worksheet = null;\n});\n\n/* eslint-disable quote-props */\nconst SpecialValues = {\n  true: true,\n  false: false,\n  '#N/A': { error: '#N/A' },\n  '#REF!': { error: '#REF!' },\n  '#NAME?': { error: '#NAME?' },\n  '#DIV/0!': { error: '#DIV/0!' },\n  '#NULL!': { error: '#NULL!' },\n  '#VALUE!': { error: '#VALUE!' },\n  '#NUM!': { error: '#NUM!' },\n};\n/* eslint-ensable quote-props */\n\nCSV.prototype = {\n  readFile(filename, options) {\n    const self = this;\n    options = options || {};\n    let stream;\n    return utils.fs\n      .exists(filename)\n      .then(exists => {\n        if (!exists) {\n          throw new Error(`File not found: ${filename}`);\n        }\n        stream = fs.createReadStream(filename);\n        return self.read(stream, options);\n      })\n      .then(worksheet => {\n        stream.close();\n        return worksheet;\n      });\n  },\n  read(stream, options) {\n    options = options || {};\n    return new PromiseLib.Promise((resolve, reject) => {\n      const csvStream = this.createInputStream(options)\n        .on('worksheet', resolve)\n        .on('error', reject);\n\n      stream.pipe(csvStream);\n    });\n  },\n  createInputStream(options) {\n    options = options || {};\n    const worksheet = this.workbook.addWorksheet(options.sheetName);\n\n    const dateFormats = options.dateFormats || [moment.ISO_8601, 'MM-DD-YYYY', 'YYYY-MM-DD'];\n    const map =\n      options.map ||\n      function(datum) {\n        if (datum === '') {\n          return null;\n        }\n        const datumNumber = Number(datum);\n        if (!Number.isNaN(datumNumber)) {\n          return datumNumber;\n        }\n        const dt = moment(datum, dateFormats, true);\n        if (dt.isValid()) {\n          return new Date(dt.valueOf());\n        }\n        const special = SpecialValues[datum];\n        if (special !== undefined) {\n          return special;\n        }\n        return datum;\n      };\n\n    const csvStream = csv(options)\n      .on('data', data => {\n        worksheet.addRow(data.map(map));\n      })\n      .on('end', () => {\n        csvStream.emit('worksheet', worksheet);\n      });\n    return csvStream;\n  },\n\n  write(stream, options) {\n    return new PromiseLib.Promise((resolve, reject) => {\n      options = options || {};\n      // const encoding = options.encoding || 'utf8';\n      // const separator = options.separator || ',';\n      // const quoteChar = options.quoteChar || '\\'';\n\n      const worksheet = this.workbook.getWorksheet(options.sheetName || options.sheetId);\n\n      const csvStream = csv.createWriteStream(options);\n      stream.on('finish', () => {\n        resolve();\n      });\n      csvStream.on('error', reject);\n      csvStream.pipe(stream);\n\n      const { dateFormat, dateUTC } = options;\n      const map =\n        options.map ||\n        (value => {\n          if (value) {\n            if (value.text || value.hyperlink) {\n              return value.hyperlink || value.text || '';\n            }\n            if (value.formula || value.result) {\n              return value.result || '';\n            }\n            if (value instanceof Date) {\n              if (dateFormat) {\n                return dateUTC ? moment.utc(value).format(dateFormat) : moment(value).format(dateFormat);\n              }\n              return dateUTC ? moment.utc(value).format() : moment(value).format();\n            }\n            if (value.error) {\n              return value.error;\n            }\n            if (typeof value === 'object') {\n              return JSON.stringify(value);\n            }\n          }\n          return value;\n        });\n\n      const includeEmptyRows = options.includeEmptyRows === undefined || options.includeEmptyRows;\n      let lastRow = 1;\n      if (worksheet) {\n        worksheet.eachRow((row, rowNumber) => {\n          if (includeEmptyRows) {\n            while (lastRow++ < rowNumber - 1) {\n              csvStream.write([]);\n            }\n          }\n          const { values } = row;\n          values.shift();\n          csvStream.write(values.map(map));\n          lastRow = rowNumber;\n        });\n      }\n      csvStream.end();\n    });\n  },\n  writeFile(filename, options) {\n    options = options || {};\n\n    const streamOptions = {\n      encoding: options.encoding || 'utf8',\n    };\n    const stream = fs.createWriteStream(filename, streamOptions);\n\n    return this.write(stream, options);\n  },\n  writeBuffer(options) {\n    const self = this;\n    const stream = new StreamBuf();\n    return self.write(stream, options).then(() => stream.read());\n  },\n};\n"],"file":"csv.js"}