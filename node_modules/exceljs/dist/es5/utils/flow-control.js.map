{"version":3,"sources":["../../../lib/utils/flow-control.js"],"names":["events","require","PromiseLib","utils","FlowControl","options","queue","pipes","children","parent","flushing","gc","getTimeout","threshold","undefined","divisor","memory","process","memoryUsage","heapSize","heapTotal","Math","floor","dst","data","encoding","Promise","resolve","reject","write","error","chunk","promises","forEach","pipe","sync","stream","push","_write","end","length","all","then","callback","e","count","seq","cr","setInterval","stdout","timeout","anime","_animate","setTimeout","clearInterval","corked","_delay","_pipe","shift","setImmediate","_flush","stem","emit","Function","nop","Error","stemFlow","filter","Object","assign","child","on","item","join","some","EventEmitter","module","exports"],"mappings":"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","sourcesContent":["const events = require('events');\nconst PromiseLib = require('./promise');\n\nconst utils = require('./utils');\n\n// =============================================================================\n// FlowControl - Used to slow down streaming to manageable speed\n// Implements a subset of Stream.Duplex: pipe() and write()\nclass FlowControl extends events.EventEmitter {\n  constructor(options) {\n    super();\n\n    this.options = options = options || {};\n\n    // Buffer queue\n    this.queue = [];\n\n    // Consumer streams\n    this.pipes = [];\n\n    // Down-stream flow-control instances\n    this.children = [];\n\n    // Up-stream flow-control instances\n    this.parent = options.parent;\n\n    // Ensure we don't flush more than once at a time\n    this.flushing = false;\n\n    // determine timeout for flow control delays\n    if (options.gc) {\n      const {gc} = options;\n      if (gc.getTimeout) {\n        this.getTimeout = gc.getTimeout;\n      } else {\n        // heap size below which we don't bother delaying\n        const threshold = gc.threshold !== undefined ? gc.threshold : 150000000;\n        // convert from heapsize to ms timeout\n        const divisor = gc.divisor !== undefined ? gc.divisor : 500000;\n        this.getTimeout = function() {\n          const memory = process.memoryUsage();\n          const heapSize = memory.heapTotal;\n          return heapSize < threshold ? 0 : Math.floor(heapSize / divisor);\n        };\n      }\n    } else {\n      this.getTimeout = null;\n    }\n  }\n\n  get name() {\n    return ['FlowControl', this.parent ? 'Child' : 'Root', this.corked ? 'corked' : 'open'].join(' ');\n  }\n\n  get corked() {\n    // We remain corked while we have children and at least one has data to consume\n    return this.children.length > 0 && this.children.some(child => child.queue && child.queue.length);\n  }\n\n  get stem() {\n    // the decision to stem the incoming data depends on whether the children are corked\n    // and how many buffers we have backed up\n    return this.corked || !this.queue || this.queue.length > 2;\n  }\n\n  _write(dst, data, encoding) {\n    // Write to a single destination and return a promise\n\n    return new PromiseLib.Promise((resolve, reject) => {\n      dst.write(data, encoding, error => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  _pipe(chunk) {\n    // Write chunk to all pipes. A chunk with no data is the end\n    const promises = [];\n    this.pipes.forEach(pipe => {\n      if (chunk.data) {\n        if (pipe.sync) {\n          pipe.stream.write(chunk.data, chunk.encoding);\n        } else {\n          promises.push(this._write(pipe.stream, chunk.data, chunk.encoding));\n        }\n      } else {\n        pipe.stream.end();\n      }\n    });\n    if (!promises.length) {\n      promises.push(PromiseLib.Promise.resolve());\n    }\n    return PromiseLib.Promise.all(promises).then(() => {\n      try {\n        chunk.callback();\n      } catch (e) {\n        // quietly ignore\n      }\n    });\n  }\n\n  _animate() {\n    let count = 0;\n    const seq = ['|', '/', '-', '\\\\'];\n    const cr = '\\u001b[0G'; // was '\\033[0G'\n    return setInterval(() => {\n      process.stdout.write(seq[count++ % 4] + cr);\n    }, 100);\n  }\n\n  _delay() {\n    // in certain situations it may be useful to delay processing (e.g. for GC)\n    const timeout = this.getTimeout && this.getTimeout();\n    if (timeout) {\n      return new PromiseLib.Promise(resolve => {\n        const anime = this._animate();\n        setTimeout(() => {\n          clearInterval(anime);\n          resolve();\n        }, timeout);\n      });\n    }\n    return PromiseLib.Promise.resolve();\n  }\n\n  _flush() {\n    // If/while not corked and we have buffers to send, send them\n    if (this.queue && !this.flushing && !this.corked) {\n      if (this.queue.length) {\n        this.flushing = true;\n        this._delay()\n          .then(() => this._pipe(this.queue.shift()))\n          .then(() => {\n            setImmediate(() => {\n              this.flushing = false;\n              this._flush();\n            });\n          });\n      }\n\n      if (!this.stem) {\n        // Signal up-stream that we're ready for more data\n        this.emit('drain');\n      }\n    }\n  }\n\n  write(data, encoding, callback) {\n    // Called by up-stream pipe\n    if (encoding instanceof Function) {\n      callback = encoding;\n      encoding = 'utf8';\n    }\n    callback = callback || utils.nop;\n\n    if (!this.queue) {\n      throw new Error('Cannot write to stream after end');\n    }\n\n    // Always queue chunks and then flush\n    this.queue.push({\n      data,\n      encoding,\n      callback,\n    });\n    this._flush();\n\n    // restrict further incoming data if we have backed up buffers or\n    // the children are still busy\n    const stemFlow = this.corked || this.queue.length > 3;\n    return !stemFlow;\n  }\n\n  end() {\n    // Signal from up-stream\n    this.queue.push({\n      callback: () => {\n        this.queue = null;\n        this.emit('finish');\n      },\n    });\n    this._flush();\n  }\n\n  pipe(stream, options) {\n    options = options || {};\n\n    // some streams don't call callbacks\n    const sync = options.sync || false;\n\n    this.pipes.push({\n      stream,\n      sync,\n    });\n  }\n\n  unpipe(stream) {\n    this.pipes = this.pipes.filter(pipe => pipe.stream !== stream);\n  }\n\n  createChild() {\n    // Create a down-stream flow-control\n    const options = Object.assign({parent: this}, this.options);\n    const child = new FlowControl(options);\n    this.children.push(child);\n\n    child.on('drain', () => {\n      // a child is ready for more\n      this._flush();\n    });\n\n    child.on('finish', () => {\n      // One child has finished its stream. Remove it and continue\n      this.children = this.children.filter(item => item !== child);\n      this._flush();\n    });\n\n    return child;\n  }\n}\n\nmodule.exports = FlowControl;\n"],"file":"flow-control.js"}